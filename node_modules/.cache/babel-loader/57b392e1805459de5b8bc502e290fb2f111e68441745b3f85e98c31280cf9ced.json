{"ast":null,"code":"import Image from '../Image';\nimport { GREY } from '../model/model';\n\n/**\n * Create a new grey Image by combining the channels of the current image.\n * @memberof Image\n * @instance\n * @param {function} method\n * @param {object} [options]\n * @param {boolean} [options.mergeAlpha=false]\n * @param {boolean} [options.keepAlpha=false]\n * @return {Image}\n */\nexport default function combineChannels(method = defaultCombineMethod, options = {}) {\n  let {\n    mergeAlpha = false,\n    keepAlpha = false\n  } = options;\n  mergeAlpha &= this.alpha;\n  keepAlpha &= this.alpha;\n  this.checkProcessable('combineChannels', {\n    bitDepth: [8, 16]\n  });\n  let newImage = Image.createFrom(this, {\n    components: 1,\n    alpha: keepAlpha,\n    colorModel: GREY\n  });\n  let ptr = 0;\n  for (let i = 0; i < this.size; i++) {\n    // TODO quite slow because we create a new pixel each time\n    let value = method(this.getPixel(i));\n    if (mergeAlpha) {\n      newImage.data[ptr++] = value * this.data[i * this.channels + this.components] / this.maxValue;\n    } else {\n      newImage.data[ptr++] = value;\n      if (keepAlpha) {\n        newImage.data[ptr++] = this.data[i * this.channels + this.components];\n      }\n    }\n  }\n  return newImage;\n}\nfunction defaultCombineMethod(pixel) {\n  return (pixel[0] + pixel[1] + pixel[2]) / 3;\n}","map":{"version":3,"names":["Image","GREY","combineChannels","method","defaultCombineMethod","options","mergeAlpha","keepAlpha","alpha","checkProcessable","bitDepth","newImage","createFrom","components","colorModel","ptr","i","size","value","getPixel","data","channels","maxValue","pixel"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/image-js/src/image/utility/combineChannels.js"],"sourcesContent":["import Image from '../Image';\nimport { GREY } from '../model/model';\n\n/**\n * Create a new grey Image by combining the channels of the current image.\n * @memberof Image\n * @instance\n * @param {function} method\n * @param {object} [options]\n * @param {boolean} [options.mergeAlpha=false]\n * @param {boolean} [options.keepAlpha=false]\n * @return {Image}\n */\nexport default function combineChannels(\n  method = defaultCombineMethod,\n  options = {},\n) {\n  let { mergeAlpha = false, keepAlpha = false } = options;\n\n  mergeAlpha &= this.alpha;\n  keepAlpha &= this.alpha;\n\n  this.checkProcessable('combineChannels', {\n    bitDepth: [8, 16],\n  });\n\n  let newImage = Image.createFrom(this, {\n    components: 1,\n    alpha: keepAlpha,\n    colorModel: GREY,\n  });\n\n  let ptr = 0;\n  for (let i = 0; i < this.size; i++) {\n    // TODO quite slow because we create a new pixel each time\n    let value = method(this.getPixel(i));\n    if (mergeAlpha) {\n      newImage.data[ptr++] =\n        (value * this.data[i * this.channels + this.components]) /\n        this.maxValue;\n    } else {\n      newImage.data[ptr++] = value;\n      if (keepAlpha) {\n        newImage.data[ptr++] = this.data[i * this.channels + this.components];\n      }\n    }\n  }\n\n  return newImage;\n}\n\nfunction defaultCombineMethod(pixel) {\n  return (pixel[0] + pixel[1] + pixel[2]) / 3;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,UAAU;AAC5B,SAASC,IAAI,QAAQ,gBAAgB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,eAAeA,CACrCC,MAAM,GAAGC,oBAAoB,EAC7BC,OAAO,GAAG,CAAC,CAAC,EACZ;EACA,IAAI;IAAEC,UAAU,GAAG,KAAK;IAAEC,SAAS,GAAG;EAAM,CAAC,GAAGF,OAAO;EAEvDC,UAAU,IAAI,IAAI,CAACE,KAAK;EACxBD,SAAS,IAAI,IAAI,CAACC,KAAK;EAEvB,IAAI,CAACC,gBAAgB,CAAC,iBAAiB,EAAE;IACvCC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;EAClB,CAAC,CAAC;EAEF,IAAIC,QAAQ,GAAGX,KAAK,CAACY,UAAU,CAAC,IAAI,EAAE;IACpCC,UAAU,EAAE,CAAC;IACbL,KAAK,EAAED,SAAS;IAChBO,UAAU,EAAEb;EACd,CAAC,CAAC;EAEF,IAAIc,GAAG,GAAG,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACC,IAAI,EAAED,CAAC,EAAE,EAAE;IAClC;IACA,IAAIE,KAAK,GAAGf,MAAM,CAAC,IAAI,CAACgB,QAAQ,CAACH,CAAC,CAAC,CAAC;IACpC,IAAIV,UAAU,EAAE;MACdK,QAAQ,CAACS,IAAI,CAACL,GAAG,EAAE,CAAC,GACjBG,KAAK,GAAG,IAAI,CAACE,IAAI,CAACJ,CAAC,GAAG,IAAI,CAACK,QAAQ,GAAG,IAAI,CAACR,UAAU,CAAC,GACvD,IAAI,CAACS,QAAQ;IACjB,CAAC,MAAM;MACLX,QAAQ,CAACS,IAAI,CAACL,GAAG,EAAE,CAAC,GAAGG,KAAK;MAC5B,IAAIX,SAAS,EAAE;QACbI,QAAQ,CAACS,IAAI,CAACL,GAAG,EAAE,CAAC,GAAG,IAAI,CAACK,IAAI,CAACJ,CAAC,GAAG,IAAI,CAACK,QAAQ,GAAG,IAAI,CAACR,UAAU,CAAC;MACvE;IACF;EACF;EAEA,OAAOF,QAAQ;AACjB;AAEA,SAASP,oBAAoBA,CAACmB,KAAK,EAAE;EACnC,OAAO,CAACA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;AAC7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}