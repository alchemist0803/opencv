{"ast":null,"code":"let types = new Map([[1, [1, readByte]], [2, [1, readASCII]], [3, [2, readShort]], [4, [4, readLong]], [5, [8, readRational]], [6, [1, readSByte]], [7, [1, readByte]], [8, [2, readSShort]], [9, [4, readSLong]], [10, [8, readSRational]], [11, [4, readFloat]], [12, [8, readDouble]] // DOUBLE\n]);\nexport function getByteLength(type, count) {\n  const val = types.get(type);\n  if (!val) throw new Error(`type not found: ${type}`);\n  return val[0] * count;\n}\nexport function readData(decoder, type, count) {\n  const val = types.get(type);\n  if (!val) throw new Error(`type not found: ${type}`);\n  return val[1](decoder, count);\n}\nfunction readByte(decoder, count) {\n  if (count === 1) return decoder.readUint8();\n  let array = new Uint8Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readUint8();\n  }\n  return array;\n}\nfunction readASCII(decoder, count) {\n  let strings = [];\n  let currentString = '';\n  for (let i = 0; i < count; i++) {\n    let char = String.fromCharCode(decoder.readUint8());\n    if (char === '\\0') {\n      strings.push(currentString);\n      currentString = '';\n    } else {\n      currentString += char;\n    }\n  }\n  if (strings.length === 1) {\n    return strings[0];\n  } else {\n    return strings;\n  }\n}\nfunction readShort(decoder, count) {\n  if (count === 1) return decoder.readUint16();\n  let array = new Uint16Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readUint16();\n  }\n  return array;\n}\nfunction readLong(decoder, count) {\n  if (count === 1) return decoder.readUint32();\n  let array = new Uint32Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readUint32();\n  }\n  return array;\n}\nfunction readRational(decoder, count) {\n  if (count === 1) {\n    return decoder.readUint32() / decoder.readUint32();\n  }\n  let rationals = new Array(count);\n  for (let i = 0; i < count; i++) {\n    rationals[i] = decoder.readUint32() / decoder.readUint32();\n  }\n  return rationals;\n}\nfunction readSByte(decoder, count) {\n  if (count === 1) return decoder.readInt8();\n  let array = new Int8Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readInt8();\n  }\n  return array;\n}\nfunction readSShort(decoder, count) {\n  if (count === 1) return decoder.readInt16();\n  let array = new Int16Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readInt16();\n  }\n  return array;\n}\nfunction readSLong(decoder, count) {\n  if (count === 1) return decoder.readInt32();\n  let array = new Int32Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readInt32();\n  }\n  return array;\n}\nfunction readSRational(decoder, count) {\n  if (count === 1) {\n    return decoder.readInt32() / decoder.readInt32();\n  }\n  let rationals = new Array(count);\n  for (let i = 0; i < count; i++) {\n    rationals[i] = decoder.readInt32() / decoder.readInt32();\n  }\n  return rationals;\n}\nfunction readFloat(decoder, count) {\n  if (count === 1) return decoder.readFloat32();\n  let array = new Float32Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readFloat32();\n  }\n  return array;\n}\nfunction readDouble(decoder, count) {\n  if (count === 1) return decoder.readFloat64();\n  let array = new Float64Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readFloat64();\n  }\n  return array;\n}","map":{"version":3,"names":["types","Map","readByte","readASCII","readShort","readLong","readRational","readSByte","readSShort","readSLong","readSRational","readFloat","readDouble","getByteLength","type","count","val","get","Error","readData","decoder","readUint8","array","Uint8Array","i","strings","currentString","char","String","fromCharCode","push","length","readUint16","Uint16Array","readUint32","Uint32Array","rationals","Array","readInt8","Int8Array","readInt16","Int16Array","readInt32","Int32Array","readFloat32","Float32Array","readFloat64","Float64Array"],"sources":["C:\\Users\\Admin\\Documents\\Workspace\\opencv\\opencv\\node_modules\\tiff\\src\\ifdValue.ts"],"sourcesContent":["import TIFFDecoder from './tiffDecoder';\n\nlet types = new Map<\n  number,\n  [number, (decoder: TIFFDecoder, count: number) => any]\n>([\n  [1, [1, readByte]], // BYTE\n  [2, [1, readASCII]], // ASCII\n  [3, [2, readShort]], // SHORT\n  [4, [4, readLong]], // LONG\n  [5, [8, readRational]], // RATIONAL\n  [6, [1, readSByte]], // SBYTE\n  [7, [1, readByte]], // UNDEFINED\n  [8, [2, readSShort]], // SSHORT\n  [9, [4, readSLong]], // SLONG\n  [10, [8, readSRational]], // SRATIONAL\n  [11, [4, readFloat]], // FLOAT\n  [12, [8, readDouble]], // DOUBLE\n]);\n\nexport function getByteLength(type: number, count: number): number {\n  const val = types.get(type);\n  if (!val) throw new Error(`type not found: ${type}`);\n  return val[0] * count;\n}\n\nexport function readData(\n  decoder: TIFFDecoder,\n  type: number,\n  count: number,\n): any {\n  const val = types.get(type);\n  if (!val) throw new Error(`type not found: ${type}`);\n  return val[1](decoder, count);\n}\n\nfunction readByte(decoder: TIFFDecoder, count: number): number | Uint8Array {\n  if (count === 1) return decoder.readUint8();\n  let array = new Uint8Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readUint8();\n  }\n  return array;\n}\n\nfunction readASCII(decoder: TIFFDecoder, count: number): string | string[] {\n  let strings = [];\n  let currentString = '';\n  for (let i = 0; i < count; i++) {\n    let char = String.fromCharCode(decoder.readUint8());\n    if (char === '\\0') {\n      strings.push(currentString);\n      currentString = '';\n    } else {\n      currentString += char;\n    }\n  }\n  if (strings.length === 1) {\n    return strings[0];\n  } else {\n    return strings;\n  }\n}\n\nfunction readShort(decoder: TIFFDecoder, count: number): number | Uint16Array {\n  if (count === 1) return decoder.readUint16();\n  let array = new Uint16Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readUint16();\n  }\n  return array;\n}\n\nfunction readLong(decoder: TIFFDecoder, count: number): number | Uint32Array {\n  if (count === 1) return decoder.readUint32();\n  let array = new Uint32Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readUint32();\n  }\n  return array;\n}\n\nfunction readRational(decoder: TIFFDecoder, count: number): number | number[] {\n  if (count === 1) {\n    return decoder.readUint32() / decoder.readUint32();\n  }\n  let rationals = new Array(count);\n  for (let i = 0; i < count; i++) {\n    rationals[i] = decoder.readUint32() / decoder.readUint32();\n  }\n  return rationals;\n}\n\nfunction readSByte(decoder: TIFFDecoder, count: number): number | Int8Array {\n  if (count === 1) return decoder.readInt8();\n  let array = new Int8Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readInt8();\n  }\n  return array;\n}\n\nfunction readSShort(decoder: TIFFDecoder, count: number): number | Int16Array {\n  if (count === 1) return decoder.readInt16();\n  let array = new Int16Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readInt16();\n  }\n  return array;\n}\n\nfunction readSLong(decoder: TIFFDecoder, count: number): number | Int32Array {\n  if (count === 1) return decoder.readInt32();\n  let array = new Int32Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readInt32();\n  }\n  return array;\n}\n\nfunction readSRational(decoder: TIFFDecoder, count: number): number | number[] {\n  if (count === 1) {\n    return decoder.readInt32() / decoder.readInt32();\n  }\n  let rationals = new Array(count);\n  for (let i = 0; i < count; i++) {\n    rationals[i] = decoder.readInt32() / decoder.readInt32();\n  }\n  return rationals;\n}\n\nfunction readFloat(decoder: TIFFDecoder, count: number): number | Float32Array {\n  if (count === 1) return decoder.readFloat32();\n  let array = new Float32Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readFloat32();\n  }\n  return array;\n}\n\nfunction readDouble(\n  decoder: TIFFDecoder,\n  count: number,\n): number | Float64Array {\n  if (count === 1) return decoder.readFloat64();\n  let array = new Float64Array(count);\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readFloat64();\n  }\n  return array;\n}\n"],"mappings":"AAEA,IAAIA,KAAK,GAAG,IAAIC,GAAG,CAGjB,CACA,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEC,QAAQ,CAAC,CAAC,EAClB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEC,SAAS,CAAC,CAAC,EACnB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEC,SAAS,CAAC,CAAC,EACnB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEC,QAAQ,CAAC,CAAC,EAClB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEC,YAAY,CAAC,CAAC,EACtB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEC,SAAS,CAAC,CAAC,EACnB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEL,QAAQ,CAAC,CAAC,EAClB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEM,UAAU,CAAC,CAAC,EACpB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEC,SAAS,CAAC,CAAC,EACnB,CAAC,EAAE,EAAE,CAAC,CAAC,EAAEC,aAAa,CAAC,CAAC,EACxB,CAAC,EAAE,EAAE,CAAC,CAAC,EAAEC,SAAS,CAAC,CAAC,EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,EAAEC,UAAU,CAAC,CAAC,CAAE;AAAA,CACxB,CAAC;AAEF,OAAM,SAAUC,aAAaA,CAACC,IAAY,EAAEC,KAAa;EACvD,MAAMC,GAAG,GAAGhB,KAAK,CAACiB,GAAG,CAACH,IAAI,CAAC;EAC3B,IAAI,CAACE,GAAG,EAAE,MAAM,IAAIE,KAAK,CAAC,mBAAmBJ,IAAI,EAAE,CAAC;EACpD,OAAOE,GAAG,CAAC,CAAC,CAAC,GAAGD,KAAK;AACvB;AAEA,OAAM,SAAUI,QAAQA,CACtBC,OAAoB,EACpBN,IAAY,EACZC,KAAa;EAEb,MAAMC,GAAG,GAAGhB,KAAK,CAACiB,GAAG,CAACH,IAAI,CAAC;EAC3B,IAAI,CAACE,GAAG,EAAE,MAAM,IAAIE,KAAK,CAAC,mBAAmBJ,IAAI,EAAE,CAAC;EACpD,OAAOE,GAAG,CAAC,CAAC,CAAC,CAACI,OAAO,EAAEL,KAAK,CAAC;AAC/B;AAEA,SAASb,QAAQA,CAACkB,OAAoB,EAAEL,KAAa;EACnD,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAOK,OAAO,CAACC,SAAS,EAAE;EAC3C,IAAIC,KAAK,GAAG,IAAIC,UAAU,CAACR,KAAK,CAAC;EACjC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,EAAES,CAAC,EAAE,EAAE;IAC9BF,KAAK,CAACE,CAAC,CAAC,GAAGJ,OAAO,CAACC,SAAS,EAAE;;EAEhC,OAAOC,KAAK;AACd;AAEA,SAASnB,SAASA,CAACiB,OAAoB,EAAEL,KAAa;EACpD,IAAIU,OAAO,GAAG,EAAE;EAChB,IAAIC,aAAa,GAAG,EAAE;EACtB,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,EAAES,CAAC,EAAE,EAAE;IAC9B,IAAIG,IAAI,GAAGC,MAAM,CAACC,YAAY,CAACT,OAAO,CAACC,SAAS,EAAE,CAAC;IACnD,IAAIM,IAAI,KAAK,IAAI,EAAE;MACjBF,OAAO,CAACK,IAAI,CAACJ,aAAa,CAAC;MAC3BA,aAAa,GAAG,EAAE;KACnB,MAAM;MACLA,aAAa,IAAIC,IAAI;;;EAGzB,IAAIF,OAAO,CAACM,MAAM,KAAK,CAAC,EAAE;IACxB,OAAON,OAAO,CAAC,CAAC,CAAC;GAClB,MAAM;IACL,OAAOA,OAAO;;AAElB;AAEA,SAASrB,SAASA,CAACgB,OAAoB,EAAEL,KAAa;EACpD,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAOK,OAAO,CAACY,UAAU,EAAE;EAC5C,IAAIV,KAAK,GAAG,IAAIW,WAAW,CAAClB,KAAK,CAAC;EAClC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,EAAES,CAAC,EAAE,EAAE;IAC9BF,KAAK,CAACE,CAAC,CAAC,GAAGJ,OAAO,CAACY,UAAU,EAAE;;EAEjC,OAAOV,KAAK;AACd;AAEA,SAASjB,QAAQA,CAACe,OAAoB,EAAEL,KAAa;EACnD,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAOK,OAAO,CAACc,UAAU,EAAE;EAC5C,IAAIZ,KAAK,GAAG,IAAIa,WAAW,CAACpB,KAAK,CAAC;EAClC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,EAAES,CAAC,EAAE,EAAE;IAC9BF,KAAK,CAACE,CAAC,CAAC,GAAGJ,OAAO,CAACc,UAAU,EAAE;;EAEjC,OAAOZ,KAAK;AACd;AAEA,SAAShB,YAAYA,CAACc,OAAoB,EAAEL,KAAa;EACvD,IAAIA,KAAK,KAAK,CAAC,EAAE;IACf,OAAOK,OAAO,CAACc,UAAU,EAAE,GAAGd,OAAO,CAACc,UAAU,EAAE;;EAEpD,IAAIE,SAAS,GAAG,IAAIC,KAAK,CAACtB,KAAK,CAAC;EAChC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,EAAES,CAAC,EAAE,EAAE;IAC9BY,SAAS,CAACZ,CAAC,CAAC,GAAGJ,OAAO,CAACc,UAAU,EAAE,GAAGd,OAAO,CAACc,UAAU,EAAE;;EAE5D,OAAOE,SAAS;AAClB;AAEA,SAAS7B,SAASA,CAACa,OAAoB,EAAEL,KAAa;EACpD,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAOK,OAAO,CAACkB,QAAQ,EAAE;EAC1C,IAAIhB,KAAK,GAAG,IAAIiB,SAAS,CAACxB,KAAK,CAAC;EAChC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,EAAES,CAAC,EAAE,EAAE;IAC9BF,KAAK,CAACE,CAAC,CAAC,GAAGJ,OAAO,CAACkB,QAAQ,EAAE;;EAE/B,OAAOhB,KAAK;AACd;AAEA,SAASd,UAAUA,CAACY,OAAoB,EAAEL,KAAa;EACrD,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAOK,OAAO,CAACoB,SAAS,EAAE;EAC3C,IAAIlB,KAAK,GAAG,IAAImB,UAAU,CAAC1B,KAAK,CAAC;EACjC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,EAAES,CAAC,EAAE,EAAE;IAC9BF,KAAK,CAACE,CAAC,CAAC,GAAGJ,OAAO,CAACoB,SAAS,EAAE;;EAEhC,OAAOlB,KAAK;AACd;AAEA,SAASb,SAASA,CAACW,OAAoB,EAAEL,KAAa;EACpD,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAOK,OAAO,CAACsB,SAAS,EAAE;EAC3C,IAAIpB,KAAK,GAAG,IAAIqB,UAAU,CAAC5B,KAAK,CAAC;EACjC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,EAAES,CAAC,EAAE,EAAE;IAC9BF,KAAK,CAACE,CAAC,CAAC,GAAGJ,OAAO,CAACsB,SAAS,EAAE;;EAEhC,OAAOpB,KAAK;AACd;AAEA,SAASZ,aAAaA,CAACU,OAAoB,EAAEL,KAAa;EACxD,IAAIA,KAAK,KAAK,CAAC,EAAE;IACf,OAAOK,OAAO,CAACsB,SAAS,EAAE,GAAGtB,OAAO,CAACsB,SAAS,EAAE;;EAElD,IAAIN,SAAS,GAAG,IAAIC,KAAK,CAACtB,KAAK,CAAC;EAChC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,EAAES,CAAC,EAAE,EAAE;IAC9BY,SAAS,CAACZ,CAAC,CAAC,GAAGJ,OAAO,CAACsB,SAAS,EAAE,GAAGtB,OAAO,CAACsB,SAAS,EAAE;;EAE1D,OAAON,SAAS;AAClB;AAEA,SAASzB,SAASA,CAACS,OAAoB,EAAEL,KAAa;EACpD,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAOK,OAAO,CAACwB,WAAW,EAAE;EAC7C,IAAItB,KAAK,GAAG,IAAIuB,YAAY,CAAC9B,KAAK,CAAC;EACnC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,EAAES,CAAC,EAAE,EAAE;IAC9BF,KAAK,CAACE,CAAC,CAAC,GAAGJ,OAAO,CAACwB,WAAW,EAAE;;EAElC,OAAOtB,KAAK;AACd;AAEA,SAASV,UAAUA,CACjBQ,OAAoB,EACpBL,KAAa;EAEb,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAOK,OAAO,CAAC0B,WAAW,EAAE;EAC7C,IAAIxB,KAAK,GAAG,IAAIyB,YAAY,CAAChC,KAAK,CAAC;EACnC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,EAAES,CAAC,EAAE,EAAE;IAC9BF,KAAK,CAACE,CAAC,CAAC,GAAGJ,OAAO,CAAC0B,WAAW,EAAE;;EAElC,OAAOxB,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}