{"ast":null,"code":"import FFT from 'fft.js';\nimport nextPOT from 'next-power-of-two';\nexport default function fftConvolution(input, kernel) {\n  const resultLength = input.length + kernel.length - 1;\n  const fftLength = nextPOT(resultLength);\n  const fft = new FFT(fftLength);\n  const {\n    output: fftKernel,\n    input: result\n  } = createPaddedFFt(kernel, fft, fftLength);\n  const {\n    output: fftInput\n  } = createPaddedFFt(input, fft, fftLength);\n\n  // reuse arrays\n  const fftConv = fftInput;\n  const conv = fftKernel;\n  for (var i = 0; i < fftConv.length; i += 2) {\n    const tmp = fftInput[i] * fftKernel[i] - fftInput[i + 1] * fftKernel[i + 1];\n    fftConv[i + 1] = fftInput[i] * fftKernel[i + 1] + fftInput[i + 1] * fftKernel[i];\n    fftConv[i] = tmp;\n  }\n  fft.inverseTransform(conv, fftConv);\n  return fft.fromComplexArray(conv, result).slice(0, resultLength);\n}\nfunction createPaddedFFt(data, fft, length) {\n  const input = new Array(length);\n  var i = 0;\n  for (; i < data.length; i++) {\n    input[i] = data[i];\n  }\n  for (; i < length; i++) {\n    input[i] = 0;\n  }\n  const fftInput = fft.toComplexArray(input);\n  const output = fft.createComplexArray();\n  fft.transform(output, fftInput);\n  return {\n    output,\n    input,\n    fftInput\n  };\n}","map":{"version":3,"names":["FFT","nextPOT","fftConvolution","input","kernel","resultLength","length","fftLength","fft","output","fftKernel","result","createPaddedFFt","fftInput","fftConv","conv","i","tmp","inverseTransform","fromComplexArray","slice","data","Array","toComplexArray","createComplexArray","transform"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/ml-convolution/src/fftConvolution.js"],"sourcesContent":["import FFT from 'fft.js';\nimport nextPOT from 'next-power-of-two';\n\nexport default function fftConvolution(input, kernel) {\n    const resultLength = input.length + kernel.length - 1;\n    const fftLength = nextPOT(resultLength);\n\n    const fft = new FFT(fftLength);\n\n    const {output: fftKernel, input: result} = createPaddedFFt(kernel, fft, fftLength);\n    const {output: fftInput} = createPaddedFFt(input, fft, fftLength);\n\n    // reuse arrays\n    const fftConv = fftInput;\n    const conv = fftKernel;\n    for (var i = 0; i < fftConv.length; i += 2) {\n        const tmp = fftInput[i] * fftKernel[i] - fftInput[i + 1] * fftKernel[i + 1];\n        fftConv[i + 1] = fftInput[i] * fftKernel[i + 1] + fftInput[i + 1] * fftKernel[i];\n        fftConv[i] = tmp;\n    }\n    fft.inverseTransform(conv, fftConv);\n    return fft.fromComplexArray(conv, result).slice(0, resultLength);\n}\n\nfunction createPaddedFFt(data, fft, length) {\n    const input = new Array(length);\n    var i = 0;\n    for (; i < data.length; i++) {\n        input[i] = data[i];\n    }\n    for (;i < length; i++) {\n        input[i] = 0;\n    }\n    const fftInput = fft.toComplexArray(input);\n    const output = fft.createComplexArray();\n    fft.transform(output, fftInput);\n    return {\n        output,\n        input,\n        fftInput\n    };\n}\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,QAAQ;AACxB,OAAOC,OAAO,MAAM,mBAAmB;AAEvC,eAAe,SAASC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAClD,MAAMC,YAAY,GAAGF,KAAK,CAACG,MAAM,GAAGF,MAAM,CAACE,MAAM,GAAG,CAAC;EACrD,MAAMC,SAAS,GAAGN,OAAO,CAACI,YAAY,CAAC;EAEvC,MAAMG,GAAG,GAAG,IAAIR,GAAG,CAACO,SAAS,CAAC;EAE9B,MAAM;IAACE,MAAM,EAAEC,SAAS;IAAEP,KAAK,EAAEQ;EAAM,CAAC,GAAGC,eAAe,CAACR,MAAM,EAAEI,GAAG,EAAED,SAAS,CAAC;EAClF,MAAM;IAACE,MAAM,EAAEI;EAAQ,CAAC,GAAGD,eAAe,CAACT,KAAK,EAAEK,GAAG,EAAED,SAAS,CAAC;;EAEjE;EACA,MAAMO,OAAO,GAAGD,QAAQ;EACxB,MAAME,IAAI,GAAGL,SAAS;EACtB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACR,MAAM,EAAEU,CAAC,IAAI,CAAC,EAAE;IACxC,MAAMC,GAAG,GAAGJ,QAAQ,CAACG,CAAC,CAAC,GAAGN,SAAS,CAACM,CAAC,CAAC,GAAGH,QAAQ,CAACG,CAAC,GAAG,CAAC,CAAC,GAAGN,SAAS,CAACM,CAAC,GAAG,CAAC,CAAC;IAC3EF,OAAO,CAACE,CAAC,GAAG,CAAC,CAAC,GAAGH,QAAQ,CAACG,CAAC,CAAC,GAAGN,SAAS,CAACM,CAAC,GAAG,CAAC,CAAC,GAAGH,QAAQ,CAACG,CAAC,GAAG,CAAC,CAAC,GAAGN,SAAS,CAACM,CAAC,CAAC;IAChFF,OAAO,CAACE,CAAC,CAAC,GAAGC,GAAG;EACpB;EACAT,GAAG,CAACU,gBAAgB,CAACH,IAAI,EAAED,OAAO,CAAC;EACnC,OAAON,GAAG,CAACW,gBAAgB,CAACJ,IAAI,EAAEJ,MAAM,CAAC,CAACS,KAAK,CAAC,CAAC,EAAEf,YAAY,CAAC;AACpE;AAEA,SAASO,eAAeA,CAACS,IAAI,EAAEb,GAAG,EAAEF,MAAM,EAAE;EACxC,MAAMH,KAAK,GAAG,IAAImB,KAAK,CAAChB,MAAM,CAAC;EAC/B,IAAIU,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGK,IAAI,CAACf,MAAM,EAAEU,CAAC,EAAE,EAAE;IACzBb,KAAK,CAACa,CAAC,CAAC,GAAGK,IAAI,CAACL,CAAC,CAAC;EACtB;EACA,OAAMA,CAAC,GAAGV,MAAM,EAAEU,CAAC,EAAE,EAAE;IACnBb,KAAK,CAACa,CAAC,CAAC,GAAG,CAAC;EAChB;EACA,MAAMH,QAAQ,GAAGL,GAAG,CAACe,cAAc,CAACpB,KAAK,CAAC;EAC1C,MAAMM,MAAM,GAAGD,GAAG,CAACgB,kBAAkB,CAAC,CAAC;EACvChB,GAAG,CAACiB,SAAS,CAAChB,MAAM,EAAEI,QAAQ,CAAC;EAC/B,OAAO;IACHJ,MAAM;IACNN,KAAK;IACLU;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}