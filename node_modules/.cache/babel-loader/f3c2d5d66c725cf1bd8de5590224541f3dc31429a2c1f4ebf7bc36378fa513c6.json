{"ast":null,"code":"import { mean as histogramMean } from '../../util/histogram';\n\n/**\n * Returns an array with the average value of each channel\n * @memberof Image\n * @instance\n * @return {number[]} Array having has size the number of channels\n */\nexport default function mean() {\n  let histograms = this.getHistograms({\n    maxSlots: this.maxValue + 1\n  });\n  let result = new Array(histograms.length);\n  for (let c = 0; c < histograms.length; c++) {\n    let histogram = histograms[c];\n    result[c] = histogramMean(histogram);\n  }\n  return result;\n}","map":{"version":3,"names":["mean","histogramMean","histograms","getHistograms","maxSlots","maxValue","result","Array","length","c","histogram"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/image-js/src/image/compute/mean.js"],"sourcesContent":["import { mean as histogramMean } from '../../util/histogram';\n\n/**\n * Returns an array with the average value of each channel\n * @memberof Image\n * @instance\n * @return {number[]} Array having has size the number of channels\n */\nexport default function mean() {\n  let histograms = this.getHistograms({ maxSlots: this.maxValue + 1 });\n  let result = new Array(histograms.length);\n  for (let c = 0; c < histograms.length; c++) {\n    let histogram = histograms[c];\n    result[c] = histogramMean(histogram);\n  }\n  return result;\n}\n"],"mappings":"AAAA,SAASA,IAAI,IAAIC,aAAa,QAAQ,sBAAsB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASD,IAAIA,CAAA,EAAG;EAC7B,IAAIE,UAAU,GAAG,IAAI,CAACC,aAAa,CAAC;IAAEC,QAAQ,EAAE,IAAI,CAACC,QAAQ,GAAG;EAAE,CAAC,CAAC;EACpE,IAAIC,MAAM,GAAG,IAAIC,KAAK,CAACL,UAAU,CAACM,MAAM,CAAC;EACzC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,UAAU,CAACM,MAAM,EAAEC,CAAC,EAAE,EAAE;IAC1C,IAAIC,SAAS,GAAGR,UAAU,CAACO,CAAC,CAAC;IAC7BH,MAAM,CAACG,CAAC,CAAC,GAAGR,aAAa,CAACS,SAAS,CAAC;EACtC;EACA,OAAOJ,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}