{"ast":null,"code":"import WorkerManager from 'web-worker-manager';\nimport extend from './extend';\nclass Worker {\n  constructor() {\n    this._url = null;\n    this._deps = [null];\n  }\n  checkUrl() {\n    if (this._url === null) {\n      throw new Error('image worker must be initialized with an URL');\n    }\n  }\n  get url() {\n    return this._url;\n  }\n  set url(value) {\n    if (typeof value !== 'string') {\n      throw new TypeError('worker URL must be a string');\n    }\n    this._url = value;\n    this._deps[0] = value;\n  }\n  static extendMethod(name, method) {\n    let manager;\n    let url;\n    let runner = {};\n    function run(...args) {\n      if (!manager) {\n        this.checkUrl();\n        url = this.url;\n        manager = new WorkerManager(method.work, {\n          deps: url\n        });\n        runner.manager = manager;\n      }\n      return method.run.call(runner, ...args);\n    }\n    run.reset = function () {\n      if (manager) {\n        manager.terminate();\n        manager = new WorkerManager(method.work, {\n          deps: url\n        });\n        runner.manager = manager;\n      }\n    };\n    Worker.prototype[name] = run;\n  }\n}\nextend(Worker);\nexport default new Worker();","map":{"version":3,"names":["WorkerManager","extend","Worker","constructor","_url","_deps","checkUrl","Error","url","value","TypeError","extendMethod","name","method","manager","runner","run","args","work","deps","call","reset","terminate","prototype"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/image-js/src/browser/worker/worker.js"],"sourcesContent":["import WorkerManager from 'web-worker-manager';\n\nimport extend from './extend';\n\nclass Worker {\n  constructor() {\n    this._url = null;\n    this._deps = [null];\n  }\n  checkUrl() {\n    if (this._url === null) {\n      throw new Error('image worker must be initialized with an URL');\n    }\n  }\n  get url() {\n    return this._url;\n  }\n  set url(value) {\n    if (typeof value !== 'string') {\n      throw new TypeError('worker URL must be a string');\n    }\n    this._url = value;\n    this._deps[0] = value;\n  }\n  static extendMethod(name, method) {\n    let manager;\n    let url;\n    let runner = {};\n\n    function run(...args) {\n      if (!manager) {\n        this.checkUrl();\n        url = this.url;\n        manager = new WorkerManager(method.work, { deps: url });\n        runner.manager = manager;\n      }\n      return method.run.call(runner, ...args);\n    }\n\n    run.reset = function () {\n      if (manager) {\n        manager.terminate();\n        manager = new WorkerManager(method.work, { deps: url });\n        runner.manager = manager;\n      }\n    };\n    Worker.prototype[name] = run;\n  }\n}\n\nextend(Worker);\n\nexport default new Worker();\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAE9C,OAAOC,MAAM,MAAM,UAAU;AAE7B,MAAMC,MAAM,CAAC;EACXC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB,IAAI,CAACC,KAAK,GAAG,CAAC,IAAI,CAAC;EACrB;EACAC,QAAQA,CAAA,EAAG;IACT,IAAI,IAAI,CAACF,IAAI,KAAK,IAAI,EAAE;MACtB,MAAM,IAAIG,KAAK,CAAC,8CAA8C,CAAC;IACjE;EACF;EACA,IAAIC,GAAGA,CAAA,EAAG;IACR,OAAO,IAAI,CAACJ,IAAI;EAClB;EACA,IAAII,GAAGA,CAACC,KAAK,EAAE;IACb,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B,MAAM,IAAIC,SAAS,CAAC,6BAA6B,CAAC;IACpD;IACA,IAAI,CAACN,IAAI,GAAGK,KAAK;IACjB,IAAI,CAACJ,KAAK,CAAC,CAAC,CAAC,GAAGI,KAAK;EACvB;EACA,OAAOE,YAAYA,CAACC,IAAI,EAAEC,MAAM,EAAE;IAChC,IAAIC,OAAO;IACX,IAAIN,GAAG;IACP,IAAIO,MAAM,GAAG,CAAC,CAAC;IAEf,SAASC,GAAGA,CAAC,GAAGC,IAAI,EAAE;MACpB,IAAI,CAACH,OAAO,EAAE;QACZ,IAAI,CAACR,QAAQ,CAAC,CAAC;QACfE,GAAG,GAAG,IAAI,CAACA,GAAG;QACdM,OAAO,GAAG,IAAId,aAAa,CAACa,MAAM,CAACK,IAAI,EAAE;UAAEC,IAAI,EAAEX;QAAI,CAAC,CAAC;QACvDO,MAAM,CAACD,OAAO,GAAGA,OAAO;MAC1B;MACA,OAAOD,MAAM,CAACG,GAAG,CAACI,IAAI,CAACL,MAAM,EAAE,GAAGE,IAAI,CAAC;IACzC;IAEAD,GAAG,CAACK,KAAK,GAAG,YAAY;MACtB,IAAIP,OAAO,EAAE;QACXA,OAAO,CAACQ,SAAS,CAAC,CAAC;QACnBR,OAAO,GAAG,IAAId,aAAa,CAACa,MAAM,CAACK,IAAI,EAAE;UAAEC,IAAI,EAAEX;QAAI,CAAC,CAAC;QACvDO,MAAM,CAACD,OAAO,GAAGA,OAAO;MAC1B;IACF,CAAC;IACDZ,MAAM,CAACqB,SAAS,CAACX,IAAI,CAAC,GAAGI,GAAG;EAC9B;AACF;AAEAf,MAAM,CAACC,MAAM,CAAC;AAEd,eAAe,IAAIA,MAAM,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}