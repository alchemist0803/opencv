{"ast":null,"code":"import LinkedList from 'fast-list';\nimport Image from '../Image';\nexport default function floodFill(options = {}) {\n  const {\n    x = 0,\n    y = 0,\n    inPlace = true\n  } = options;\n  const destination = inPlace ? this : Image.createFrom(this);\n  this.checkProcessable('floodFill', {\n    bitDepth: 1\n  });\n  const bit = this.getBitXY(x, y);\n  if (bit) return destination;\n  const queue = new LinkedList();\n  queue.push(new Node(x, y));\n  while (queue.length > 0) {\n    const node = queue.shift();\n    destination.setBitXY(node.x, node.y);\n    for (let i = node.x + 1; i < this.width; i++) {\n      if (!destination.getBitXY(i, node.y) && !this.getBitXY(i, node.y)) {\n        destination.setBitXY(i, node.y);\n        if (node.y + 1 < this.height && !this.getBitXY(i, node.y + 1)) {\n          queue.push(new Node(i, node.y + 1));\n        }\n        if (node.y - 1 >= 0 && !this.getBitXY(i, node.y - 1)) {\n          queue.push(new Node(i, node.y - 1));\n        }\n      } else {\n        break;\n      }\n    }\n    // eslint-disable-next-line for-direction\n    for (let i = node.x - 1; i >= 0; i++) {\n      if (!destination.getBitXY(i, node.y) && !this.getBitXY(i, node.y)) {\n        destination.setBitXY(i, node.y);\n        if (node.y + 1 < this.height && !this.getBitXY(i, node.y + 1)) {\n          queue.push(new Node(i, node.y + 1));\n        }\n        if (node.y - 1 >= 0 && !this.getBitXY(i, node.y - 1)) {\n          queue.push(new Node(i, node.y - 1));\n        }\n      } else {\n        break;\n      }\n    }\n  }\n  return destination;\n}\nfunction Node(x, y) {\n  this.x = x;\n  this.y = y;\n}","map":{"version":3,"names":["LinkedList","Image","floodFill","options","x","y","inPlace","destination","createFrom","checkProcessable","bitDepth","bit","getBitXY","queue","push","Node","length","node","shift","setBitXY","i","width","height"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/image-js/src/image/operator/floodFill.js"],"sourcesContent":["import LinkedList from 'fast-list';\n\nimport Image from '../Image';\n\nexport default function floodFill(options = {}) {\n  const { x = 0, y = 0, inPlace = true } = options;\n\n  const destination = inPlace ? this : Image.createFrom(this);\n\n  this.checkProcessable('floodFill', { bitDepth: 1 });\n\n  const bit = this.getBitXY(x, y);\n  if (bit) return destination;\n  const queue = new LinkedList();\n  queue.push(new Node(x, y));\n  while (queue.length > 0) {\n    const node = queue.shift();\n    destination.setBitXY(node.x, node.y);\n    for (let i = node.x + 1; i < this.width; i++) {\n      if (!destination.getBitXY(i, node.y) && !this.getBitXY(i, node.y)) {\n        destination.setBitXY(i, node.y);\n        if (node.y + 1 < this.height && !this.getBitXY(i, node.y + 1)) {\n          queue.push(new Node(i, node.y + 1));\n        }\n        if (node.y - 1 >= 0 && !this.getBitXY(i, node.y - 1)) {\n          queue.push(new Node(i, node.y - 1));\n        }\n      } else {\n        break;\n      }\n    }\n    // eslint-disable-next-line for-direction\n    for (let i = node.x - 1; i >= 0; i++) {\n      if (!destination.getBitXY(i, node.y) && !this.getBitXY(i, node.y)) {\n        destination.setBitXY(i, node.y);\n        if (node.y + 1 < this.height && !this.getBitXY(i, node.y + 1)) {\n          queue.push(new Node(i, node.y + 1));\n        }\n        if (node.y - 1 >= 0 && !this.getBitXY(i, node.y - 1)) {\n          queue.push(new Node(i, node.y - 1));\n        }\n      } else {\n        break;\n      }\n    }\n  }\n\n  return destination;\n}\n\nfunction Node(x, y) {\n  this.x = x;\n  this.y = y;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}