{"ast":null,"code":"/**\n * @memberof Image\n * @instance\n * @param {object} [options]\n * @param {number[]} [options.sampling=[10, 10]]\n * @param {boolean} [options.painted=false]\n * @param {Image} [options.mask]\n * @return {object}\n */\nexport default function getPixelsGrid(options = {}) {\n  let {\n    sampling = [10, 10],\n    painted = false,\n    mask\n  } = options;\n  this.checkProcessable('getPixelsGrid', {\n    bitDepth: [8, 16],\n    channels: 1\n  });\n  if (!Array.isArray(sampling)) {\n    sampling = [sampling, sampling];\n  }\n  const xSampling = sampling[0];\n  const ySampling = sampling[1];\n  const xyS = [];\n  const zS = [];\n  const xStep = this.width / xSampling;\n  const yStep = this.height / ySampling;\n  let currentX = Math.floor(xStep / 2);\n  for (let i = 0; i < xSampling; i++) {\n    let currentY = Math.floor(yStep / 2);\n    for (let j = 0; j < ySampling; j++) {\n      let x = Math.round(currentX);\n      let y = Math.round(currentY);\n      if (!mask || mask.getBitXY(x, y)) {\n        xyS.push([x, y]);\n        zS.push(this.getPixelXY(x, y));\n      }\n      currentY += yStep;\n    }\n    currentX += xStep;\n  }\n  const toReturn = {\n    xyS,\n    zS\n  };\n  if (painted) {\n    toReturn.painted = this.rgba8().paintPoints(xyS);\n  }\n  return toReturn;\n}","map":{"version":3,"names":["getPixelsGrid","options","sampling","painted","mask","checkProcessable","bitDepth","channels","Array","isArray","xSampling","ySampling","xyS","zS","xStep","width","yStep","height","currentX","Math","floor","i","currentY","j","x","round","y","getBitXY","push","getPixelXY","toReturn","rgba8","paintPoints"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/image-js/src/image/utility/getPixelsGrid.js"],"sourcesContent":["/**\n * @memberof Image\n * @instance\n * @param {object} [options]\n * @param {number[]} [options.sampling=[10, 10]]\n * @param {boolean} [options.painted=false]\n * @param {Image} [options.mask]\n * @return {object}\n */\nexport default function getPixelsGrid(options = {}) {\n  let { sampling = [10, 10], painted = false, mask } = options;\n\n  this.checkProcessable('getPixelsGrid', {\n    bitDepth: [8, 16],\n    channels: 1,\n  });\n\n  if (!Array.isArray(sampling)) {\n    sampling = [sampling, sampling];\n  }\n\n  const xSampling = sampling[0];\n  const ySampling = sampling[1];\n\n  const xyS = [];\n  const zS = [];\n\n  const xStep = this.width / xSampling;\n  const yStep = this.height / ySampling;\n  let currentX = Math.floor(xStep / 2);\n\n  for (let i = 0; i < xSampling; i++) {\n    let currentY = Math.floor(yStep / 2);\n    for (let j = 0; j < ySampling; j++) {\n      let x = Math.round(currentX);\n      let y = Math.round(currentY);\n      if (!mask || mask.getBitXY(x, y)) {\n        xyS.push([x, y]);\n        zS.push(this.getPixelXY(x, y));\n      }\n      currentY += yStep;\n    }\n    currentX += xStep;\n  }\n\n  const toReturn = { xyS, zS };\n\n  if (painted) {\n    toReturn.painted = this.rgba8().paintPoints(xyS);\n  }\n\n  return toReturn;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,aAAaA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;EAClD,IAAI;IAAEC,QAAQ,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;IAAEC,OAAO,GAAG,KAAK;IAAEC;EAAK,CAAC,GAAGH,OAAO;EAE5D,IAAI,CAACI,gBAAgB,CAAC,eAAe,EAAE;IACrCC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;IACjBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,IAAI,CAACC,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;IAC5BA,QAAQ,GAAG,CAACA,QAAQ,EAAEA,QAAQ,CAAC;EACjC;EAEA,MAAMQ,SAAS,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC7B,MAAMS,SAAS,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAE7B,MAAMU,GAAG,GAAG,EAAE;EACd,MAAMC,EAAE,GAAG,EAAE;EAEb,MAAMC,KAAK,GAAG,IAAI,CAACC,KAAK,GAAGL,SAAS;EACpC,MAAMM,KAAK,GAAG,IAAI,CAACC,MAAM,GAAGN,SAAS;EACrC,IAAIO,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,GAAG,CAAC,CAAC;EAEpC,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,SAAS,EAAEW,CAAC,EAAE,EAAE;IAClC,IAAIC,QAAQ,GAAGH,IAAI,CAACC,KAAK,CAACJ,KAAK,GAAG,CAAC,CAAC;IACpC,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,SAAS,EAAEY,CAAC,EAAE,EAAE;MAClC,IAAIC,CAAC,GAAGL,IAAI,CAACM,KAAK,CAACP,QAAQ,CAAC;MAC5B,IAAIQ,CAAC,GAAGP,IAAI,CAACM,KAAK,CAACH,QAAQ,CAAC;MAC5B,IAAI,CAAClB,IAAI,IAAIA,IAAI,CAACuB,QAAQ,CAACH,CAAC,EAAEE,CAAC,CAAC,EAAE;QAChCd,GAAG,CAACgB,IAAI,CAAC,CAACJ,CAAC,EAAEE,CAAC,CAAC,CAAC;QAChBb,EAAE,CAACe,IAAI,CAAC,IAAI,CAACC,UAAU,CAACL,CAAC,EAAEE,CAAC,CAAC,CAAC;MAChC;MACAJ,QAAQ,IAAIN,KAAK;IACnB;IACAE,QAAQ,IAAIJ,KAAK;EACnB;EAEA,MAAMgB,QAAQ,GAAG;IAAElB,GAAG;IAAEC;EAAG,CAAC;EAE5B,IAAIV,OAAO,EAAE;IACX2B,QAAQ,CAAC3B,OAAO,GAAG,IAAI,CAAC4B,KAAK,CAAC,CAAC,CAACC,WAAW,CAACpB,GAAG,CAAC;EAClD;EAEA,OAAOkB,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}