{"ast":null,"code":"'use strict';\n\nconst toBytes = s => [...s].map(c => c.charCodeAt(0));\nconst xpiZipFilename = toBytes('META-INF/mozilla.rsa');\nconst oxmlContentTypes = toBytes('[Content_Types].xml');\nconst oxmlRels = toBytes('_rels/.rels');\nfunction readUInt64LE(buf, offset = 0) {\n  let n = buf[offset];\n  let mul = 1;\n  let i = 0;\n  while (++i < 8) {\n    mul *= 0x100;\n    n += buf[offset + i] * mul;\n  }\n  return n;\n}\nconst fileType = input => {\n  if (!(input instanceof Uint8Array || input instanceof ArrayBuffer || Buffer.isBuffer(input))) {\n    throw new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`Buffer\\` or \\`ArrayBuffer\\`, got \\`${typeof input}\\``);\n  }\n  const buf = input instanceof Uint8Array ? input : new Uint8Array(input);\n  if (!(buf && buf.length > 1)) {\n    return null;\n  }\n  const check = (header, options) => {\n    options = Object.assign({\n      offset: 0\n    }, options);\n    for (let i = 0; i < header.length; i++) {\n      // If a bitmask is set\n      if (options.mask) {\n        // If header doesn't equal `buf` with bits masked off\n        if (header[i] !== (options.mask[i] & buf[i + options.offset])) {\n          return false;\n        }\n      } else if (header[i] !== buf[i + options.offset]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const checkString = (header, options) => check(toBytes(header), options);\n  if (check([0xFF, 0xD8, 0xFF])) {\n    return {\n      ext: 'jpg',\n      mime: 'image/jpeg'\n    };\n  }\n  if (check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n    return {\n      ext: 'png',\n      mime: 'image/png'\n    };\n  }\n  if (check([0x47, 0x49, 0x46])) {\n    return {\n      ext: 'gif',\n      mime: 'image/gif'\n    };\n  }\n  if (check([0x57, 0x45, 0x42, 0x50], {\n    offset: 8\n  })) {\n    return {\n      ext: 'webp',\n      mime: 'image/webp'\n    };\n  }\n  if (check([0x46, 0x4C, 0x49, 0x46])) {\n    return {\n      ext: 'flif',\n      mime: 'image/flif'\n    };\n  }\n\n  // Needs to be before `tif` check\n  if ((check([0x49, 0x49, 0x2A, 0x0]) || check([0x4D, 0x4D, 0x0, 0x2A])) && check([0x43, 0x52], {\n    offset: 8\n  })) {\n    return {\n      ext: 'cr2',\n      mime: 'image/x-canon-cr2'\n    };\n  }\n  if (check([0x49, 0x49, 0x2A, 0x0]) || check([0x4D, 0x4D, 0x0, 0x2A])) {\n    return {\n      ext: 'tif',\n      mime: 'image/tiff'\n    };\n  }\n  if (check([0x42, 0x4D])) {\n    return {\n      ext: 'bmp',\n      mime: 'image/bmp'\n    };\n  }\n  if (check([0x49, 0x49, 0xBC])) {\n    return {\n      ext: 'jxr',\n      mime: 'image/vnd.ms-photo'\n    };\n  }\n  if (check([0x38, 0x42, 0x50, 0x53])) {\n    return {\n      ext: 'psd',\n      mime: 'image/vnd.adobe.photoshop'\n    };\n  }\n\n  // Zip-based file formats\n  // Need to be before the `zip` check\n  if (check([0x50, 0x4B, 0x3, 0x4])) {\n    if (check([0x6D, 0x69, 0x6D, 0x65, 0x74, 0x79, 0x70, 0x65, 0x61, 0x70, 0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x65, 0x70, 0x75, 0x62, 0x2B, 0x7A, 0x69, 0x70], {\n      offset: 30\n    })) {\n      return {\n        ext: 'epub',\n        mime: 'application/epub+zip'\n      };\n    }\n\n    // Assumes signed `.xpi` from addons.mozilla.org\n    if (check(xpiZipFilename, {\n      offset: 30\n    })) {\n      return {\n        ext: 'xpi',\n        mime: 'application/x-xpinstall'\n      };\n    }\n    if (checkString('mimetypeapplication/vnd.oasis.opendocument.text', {\n      offset: 30\n    })) {\n      return {\n        ext: 'odt',\n        mime: 'application/vnd.oasis.opendocument.text'\n      };\n    }\n    if (checkString('mimetypeapplication/vnd.oasis.opendocument.spreadsheet', {\n      offset: 30\n    })) {\n      return {\n        ext: 'ods',\n        mime: 'application/vnd.oasis.opendocument.spreadsheet'\n      };\n    }\n    if (checkString('mimetypeapplication/vnd.oasis.opendocument.presentation', {\n      offset: 30\n    })) {\n      return {\n        ext: 'odp',\n        mime: 'application/vnd.oasis.opendocument.presentation'\n      };\n    }\n\n    // The docx, xlsx and pptx file types extend the Office Open XML file format:\n    // https://en.wikipedia.org/wiki/Office_Open_XML_file_formats\n    // We look for:\n    // - one entry named '[Content_Types].xml' or '_rels/.rels',\n    // - one entry indicating specific type of file.\n    // MS Office, OpenOffice and LibreOffice may put the parts in different order, so the check should not rely on it.\n    const findNextZipHeaderIndex = (arr, startAt = 0) => arr.findIndex((el, i, arr) => i >= startAt && arr[i] === 0x50 && arr[i + 1] === 0x4B && arr[i + 2] === 0x3 && arr[i + 3] === 0x4);\n    let zipHeaderIndex = 0; // The first zip header was already found at index 0\n    let oxmlFound = false;\n    let type = null;\n    do {\n      const offset = zipHeaderIndex + 30;\n      if (!oxmlFound) {\n        oxmlFound = check(oxmlContentTypes, {\n          offset\n        }) || check(oxmlRels, {\n          offset\n        });\n      }\n      if (!type) {\n        if (checkString('word/', {\n          offset\n        })) {\n          type = {\n            ext: 'docx',\n            mime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n          };\n        } else if (checkString('ppt/', {\n          offset\n        })) {\n          type = {\n            ext: 'pptx',\n            mime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n          };\n        } else if (checkString('xl/', {\n          offset\n        })) {\n          type = {\n            ext: 'xlsx',\n            mime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n          };\n        }\n      }\n      if (oxmlFound && type) {\n        return type;\n      }\n      zipHeaderIndex = findNextZipHeaderIndex(buf, offset);\n    } while (zipHeaderIndex >= 0);\n\n    // No more zip parts available in the buffer, but maybe we are almost certain about the type?\n    if (type) {\n      return type;\n    }\n  }\n  if (check([0x50, 0x4B]) && (buf[2] === 0x3 || buf[2] === 0x5 || buf[2] === 0x7) && (buf[3] === 0x4 || buf[3] === 0x6 || buf[3] === 0x8)) {\n    return {\n      ext: 'zip',\n      mime: 'application/zip'\n    };\n  }\n  if (check([0x75, 0x73, 0x74, 0x61, 0x72], {\n    offset: 257\n  })) {\n    return {\n      ext: 'tar',\n      mime: 'application/x-tar'\n    };\n  }\n  if (check([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7]) && (buf[6] === 0x0 || buf[6] === 0x1)) {\n    return {\n      ext: 'rar',\n      mime: 'application/x-rar-compressed'\n    };\n  }\n  if (check([0x1F, 0x8B, 0x8])) {\n    return {\n      ext: 'gz',\n      mime: 'application/gzip'\n    };\n  }\n  if (check([0x42, 0x5A, 0x68])) {\n    return {\n      ext: 'bz2',\n      mime: 'application/x-bzip2'\n    };\n  }\n  if (check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n    return {\n      ext: '7z',\n      mime: 'application/x-7z-compressed'\n    };\n  }\n  if (check([0x78, 0x01])) {\n    return {\n      ext: 'dmg',\n      mime: 'application/x-apple-diskimage'\n    };\n  }\n  if (check([0x33, 0x67, 0x70, 0x35]) ||\n  // 3gp5\n\n  check([0x0, 0x0, 0x0]) && check([0x66, 0x74, 0x79, 0x70], {\n    offset: 4\n  }) && (check([0x6D, 0x70, 0x34, 0x31], {\n    offset: 8\n  }) ||\n  // MP41\n  check([0x6D, 0x70, 0x34, 0x32], {\n    offset: 8\n  }) ||\n  // MP42\n  check([0x69, 0x73, 0x6F, 0x6D], {\n    offset: 8\n  }) ||\n  // ISOM\n  check([0x69, 0x73, 0x6F, 0x32], {\n    offset: 8\n  }) ||\n  // ISO2\n  check([0x6D, 0x6D, 0x70, 0x34], {\n    offset: 8\n  }) ||\n  // MMP4\n  check([0x4D, 0x34, 0x56], {\n    offset: 8\n  }) ||\n  // M4V\n  check([0x64, 0x61, 0x73, 0x68], {\n    offset: 8\n  }) // DASH\n  )) {\n    return {\n      ext: 'mp4',\n      mime: 'video/mp4'\n    };\n  }\n  if (check([0x4D, 0x54, 0x68, 0x64])) {\n    return {\n      ext: 'mid',\n      mime: 'audio/midi'\n    };\n  }\n\n  // https://github.com/threatstack/libmagic/blob/master/magic/Magdir/matroska\n  if (check([0x1A, 0x45, 0xDF, 0xA3])) {\n    const sliced = buf.subarray(4, 4 + 4096);\n    const idPos = sliced.findIndex((el, i, arr) => arr[i] === 0x42 && arr[i + 1] === 0x82);\n    if (idPos !== -1) {\n      const docTypePos = idPos + 3;\n      const findDocType = type => [...type].every((c, i) => sliced[docTypePos + i] === c.charCodeAt(0));\n      if (findDocType('matroska')) {\n        return {\n          ext: 'mkv',\n          mime: 'video/x-matroska'\n        };\n      }\n      if (findDocType('webm')) {\n        return {\n          ext: 'webm',\n          mime: 'video/webm'\n        };\n      }\n    }\n  }\n  if (check([0x0, 0x0, 0x0, 0x14, 0x66, 0x74, 0x79, 0x70, 0x71, 0x74, 0x20, 0x20]) || check([0x66, 0x72, 0x65, 0x65], {\n    offset: 4\n  }) ||\n  // Type: `free`\n  check([0x66, 0x74, 0x79, 0x70, 0x71, 0x74, 0x20, 0x20], {\n    offset: 4\n  }) || check([0x6D, 0x64, 0x61, 0x74], {\n    offset: 4\n  }) ||\n  // MJPEG\n  check([0x6D, 0x6F, 0x6F, 0x76], {\n    offset: 4\n  }) ||\n  // Type: `moov`\n  check([0x77, 0x69, 0x64, 0x65], {\n    offset: 4\n  })) {\n    return {\n      ext: 'mov',\n      mime: 'video/quicktime'\n    };\n  }\n\n  // RIFF file format which might be AVI, WAV, QCP, etc\n  if (check([0x52, 0x49, 0x46, 0x46])) {\n    if (check([0x41, 0x56, 0x49], {\n      offset: 8\n    })) {\n      return {\n        ext: 'avi',\n        mime: 'video/vnd.avi'\n      };\n    }\n    if (check([0x57, 0x41, 0x56, 0x45], {\n      offset: 8\n    })) {\n      return {\n        ext: 'wav',\n        mime: 'audio/vnd.wave'\n      };\n    }\n\n    // QLCM, QCP file\n    if (check([0x51, 0x4C, 0x43, 0x4D], {\n      offset: 8\n    })) {\n      return {\n        ext: 'qcp',\n        mime: 'audio/qcelp'\n      };\n    }\n  }\n\n  // ASF_Header_Object first 80 bytes\n  if (check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n    // Search for header should be in first 1KB of file.\n\n    let offset = 30;\n    do {\n      const objectSize = readUInt64LE(buf, offset + 16);\n      if (check([0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65], {\n        offset\n      })) {\n        // Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n        if (check([0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B], {\n          offset: offset + 24\n        })) {\n          // Found audio:\n          return {\n            ext: 'wma',\n            mime: 'audio/x-ms-wma'\n          };\n        }\n        if (check([0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B], {\n          offset: offset + 24\n        })) {\n          // Found video:\n          return {\n            ext: 'wmv',\n            mime: 'video/x-ms-asf'\n          };\n        }\n        break;\n      }\n      offset += objectSize;\n    } while (offset + 24 <= buf.length);\n\n    // Default to ASF generic extension\n    return {\n      ext: 'asf',\n      mime: 'application/vnd.ms-asf'\n    };\n  }\n  if (check([0x0, 0x0, 0x1, 0xBA]) || check([0x0, 0x0, 0x1, 0xB3])) {\n    return {\n      ext: 'mpg',\n      mime: 'video/mpeg'\n    };\n  }\n  if (check([0x66, 0x74, 0x79, 0x70, 0x33, 0x67], {\n    offset: 4\n  })) {\n    return {\n      ext: '3gp',\n      mime: 'video/3gpp'\n    };\n  }\n\n  // Check for MPEG header at different starting offsets\n  for (let start = 0; start < 2 && start < buf.length - 16; start++) {\n    if (check([0x49, 0x44, 0x33], {\n      offset: start\n    }) ||\n    // ID3 header\n    check([0xFF, 0xE2], {\n      offset: start,\n      mask: [0xFF, 0xE2]\n    }) // MPEG 1 or 2 Layer 3 header\n    ) {\n      return {\n        ext: 'mp3',\n        mime: 'audio/mpeg'\n      };\n    }\n    if (check([0xFF, 0xE4], {\n      offset: start,\n      mask: [0xFF, 0xE4]\n    }) // MPEG 1 or 2 Layer 2 header\n    ) {\n      return {\n        ext: 'mp2',\n        mime: 'audio/mpeg'\n      };\n    }\n    if (check([0xFF, 0xF8], {\n      offset: start,\n      mask: [0xFF, 0xFC]\n    }) // MPEG 2 layer 0 using ADTS\n    ) {\n      return {\n        ext: 'mp2',\n        mime: 'audio/mpeg'\n      };\n    }\n    if (check([0xFF, 0xF0], {\n      offset: start,\n      mask: [0xFF, 0xFC]\n    }) // MPEG 4 layer 0 using ADTS\n    ) {\n      return {\n        ext: 'mp4',\n        mime: 'audio/mpeg'\n      };\n    }\n  }\n  if (check([0x66, 0x74, 0x79, 0x70, 0x4D, 0x34, 0x41], {\n    offset: 4\n  })) {\n    return {\n      // MPEG-4 layer 3 (audio)\n      ext: 'm4a',\n      mime: 'audio/mp4' // RFC 4337\n    };\n  }\n\n  // Needs to be before `ogg` check\n  if (check([0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64], {\n    offset: 28\n  })) {\n    return {\n      ext: 'opus',\n      mime: 'audio/opus'\n    };\n  }\n\n  // If 'OggS' in first  bytes, then OGG container\n  if (check([0x4F, 0x67, 0x67, 0x53])) {\n    // This is a OGG container\n\n    // If ' theora' in header.\n    if (check([0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61], {\n      offset: 28\n    })) {\n      return {\n        ext: 'ogv',\n        mime: 'video/ogg'\n      };\n    }\n\n    // If '\\x01video' in header.\n    if (check([0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00], {\n      offset: 28\n    })) {\n      return {\n        ext: 'ogm',\n        mime: 'video/ogg'\n      };\n    }\n\n    // If ' FLAC' in header  https://xiph.org/flac/faq.html\n    if (check([0x7F, 0x46, 0x4C, 0x41, 0x43], {\n      offset: 28\n    })) {\n      return {\n        ext: 'oga',\n        mime: 'audio/ogg'\n      };\n    }\n\n    // 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n    if (check([0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20], {\n      offset: 28\n    })) {\n      return {\n        ext: 'spx',\n        mime: 'audio/ogg'\n      };\n    }\n\n    // If '\\x01vorbis' in header\n    if (check([0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73], {\n      offset: 28\n    })) {\n      return {\n        ext: 'ogg',\n        mime: 'audio/ogg'\n      };\n    }\n\n    // Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n    return {\n      ext: 'ogx',\n      mime: 'application/ogg'\n    };\n  }\n  if (check([0x66, 0x4C, 0x61, 0x43])) {\n    return {\n      ext: 'flac',\n      mime: 'audio/x-flac'\n    };\n  }\n  if (check([0x4D, 0x41, 0x43, 0x20])) {\n    // 'MAC '\n    return {\n      ext: 'ape',\n      mime: 'audio/ape'\n    };\n  }\n  if (check([0x77, 0x76, 0x70, 0x6B])) {\n    // 'wvpk'\n    return {\n      ext: 'wv',\n      mime: 'audio/wavpack'\n    };\n  }\n  if (check([0x23, 0x21, 0x41, 0x4D, 0x52, 0x0A])) {\n    return {\n      ext: 'amr',\n      mime: 'audio/amr'\n    };\n  }\n  if (check([0x25, 0x50, 0x44, 0x46])) {\n    return {\n      ext: 'pdf',\n      mime: 'application/pdf'\n    };\n  }\n  if (check([0x4D, 0x5A])) {\n    return {\n      ext: 'exe',\n      mime: 'application/x-msdownload'\n    };\n  }\n  if ((buf[0] === 0x43 || buf[0] === 0x46) && check([0x57, 0x53], {\n    offset: 1\n  })) {\n    return {\n      ext: 'swf',\n      mime: 'application/x-shockwave-flash'\n    };\n  }\n  if (check([0x7B, 0x5C, 0x72, 0x74, 0x66])) {\n    return {\n      ext: 'rtf',\n      mime: 'application/rtf'\n    };\n  }\n  if (check([0x00, 0x61, 0x73, 0x6D])) {\n    return {\n      ext: 'wasm',\n      mime: 'application/wasm'\n    };\n  }\n  if (check([0x77, 0x4F, 0x46, 0x46]) && (check([0x00, 0x01, 0x00, 0x00], {\n    offset: 4\n  }) || check([0x4F, 0x54, 0x54, 0x4F], {\n    offset: 4\n  }))) {\n    return {\n      ext: 'woff',\n      mime: 'font/woff'\n    };\n  }\n  if (check([0x77, 0x4F, 0x46, 0x32]) && (check([0x00, 0x01, 0x00, 0x00], {\n    offset: 4\n  }) || check([0x4F, 0x54, 0x54, 0x4F], {\n    offset: 4\n  }))) {\n    return {\n      ext: 'woff2',\n      mime: 'font/woff2'\n    };\n  }\n  if (check([0x4C, 0x50], {\n    offset: 34\n  }) && (check([0x00, 0x00, 0x01], {\n    offset: 8\n  }) || check([0x01, 0x00, 0x02], {\n    offset: 8\n  }) || check([0x02, 0x00, 0x02], {\n    offset: 8\n  }))) {\n    return {\n      ext: 'eot',\n      mime: 'application/vnd.ms-fontobject'\n    };\n  }\n  if (check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n    return {\n      ext: 'ttf',\n      mime: 'font/ttf'\n    };\n  }\n  if (check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n    return {\n      ext: 'otf',\n      mime: 'font/otf'\n    };\n  }\n  if (check([0x00, 0x00, 0x01, 0x00])) {\n    return {\n      ext: 'ico',\n      mime: 'image/x-icon'\n    };\n  }\n  if (check([0x00, 0x00, 0x02, 0x00])) {\n    return {\n      ext: 'cur',\n      mime: 'image/x-icon'\n    };\n  }\n  if (check([0x46, 0x4C, 0x56, 0x01])) {\n    return {\n      ext: 'flv',\n      mime: 'video/x-flv'\n    };\n  }\n  if (check([0x25, 0x21])) {\n    return {\n      ext: 'ps',\n      mime: 'application/postscript'\n    };\n  }\n  if (check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n    return {\n      ext: 'xz',\n      mime: 'application/x-xz'\n    };\n  }\n  if (check([0x53, 0x51, 0x4C, 0x69])) {\n    return {\n      ext: 'sqlite',\n      mime: 'application/x-sqlite3'\n    };\n  }\n  if (check([0x4E, 0x45, 0x53, 0x1A])) {\n    return {\n      ext: 'nes',\n      mime: 'application/x-nintendo-nes-rom'\n    };\n  }\n  if (check([0x43, 0x72, 0x32, 0x34])) {\n    return {\n      ext: 'crx',\n      mime: 'application/x-google-chrome-extension'\n    };\n  }\n  if (check([0x4D, 0x53, 0x43, 0x46]) || check([0x49, 0x53, 0x63, 0x28])) {\n    return {\n      ext: 'cab',\n      mime: 'application/vnd.ms-cab-compressed'\n    };\n  }\n\n  // Needs to be before `ar` check\n  if (check([0x21, 0x3C, 0x61, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x64, 0x65, 0x62, 0x69, 0x61, 0x6E, 0x2D, 0x62, 0x69, 0x6E, 0x61, 0x72, 0x79])) {\n    return {\n      ext: 'deb',\n      mime: 'application/x-deb'\n    };\n  }\n  if (check([0x21, 0x3C, 0x61, 0x72, 0x63, 0x68, 0x3E])) {\n    return {\n      ext: 'ar',\n      mime: 'application/x-unix-archive'\n    };\n  }\n  if (check([0xED, 0xAB, 0xEE, 0xDB])) {\n    return {\n      ext: 'rpm',\n      mime: 'application/x-rpm'\n    };\n  }\n  if (check([0x1F, 0xA0]) || check([0x1F, 0x9D])) {\n    return {\n      ext: 'Z',\n      mime: 'application/x-compress'\n    };\n  }\n  if (check([0x4C, 0x5A, 0x49, 0x50])) {\n    return {\n      ext: 'lz',\n      mime: 'application/x-lzip'\n    };\n  }\n  if (check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n    return {\n      ext: 'msi',\n      mime: 'application/x-msi'\n    };\n  }\n  if (check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n    return {\n      ext: 'mxf',\n      mime: 'application/mxf'\n    };\n  }\n  if (check([0x47], {\n    offset: 4\n  }) && (check([0x47], {\n    offset: 192\n  }) || check([0x47], {\n    offset: 196\n  }))) {\n    return {\n      ext: 'mts',\n      mime: 'video/mp2t'\n    };\n  }\n  if (check([0x42, 0x4C, 0x45, 0x4E, 0x44, 0x45, 0x52])) {\n    return {\n      ext: 'blend',\n      mime: 'application/x-blender'\n    };\n  }\n  if (check([0x42, 0x50, 0x47, 0xFB])) {\n    return {\n      ext: 'bpg',\n      mime: 'image/bpg'\n    };\n  }\n  if (check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n    // JPEG-2000 family\n\n    if (check([0x6A, 0x70, 0x32, 0x20], {\n      offset: 20\n    })) {\n      return {\n        ext: 'jp2',\n        mime: 'image/jp2'\n      };\n    }\n    if (check([0x6A, 0x70, 0x78, 0x20], {\n      offset: 20\n    })) {\n      return {\n        ext: 'jpx',\n        mime: 'image/jpx'\n      };\n    }\n    if (check([0x6A, 0x70, 0x6D, 0x20], {\n      offset: 20\n    })) {\n      return {\n        ext: 'jpm',\n        mime: 'image/jpm'\n      };\n    }\n    if (check([0x6D, 0x6A, 0x70, 0x32], {\n      offset: 20\n    })) {\n      return {\n        ext: 'mj2',\n        mime: 'image/mj2'\n      };\n    }\n  }\n  if (check([0x46, 0x4F, 0x52, 0x4D])) {\n    return {\n      ext: 'aif',\n      mime: 'audio/aiff'\n    };\n  }\n  if (checkString('<?xml ')) {\n    return {\n      ext: 'xml',\n      mime: 'application/xml'\n    };\n  }\n  if (check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {\n    offset: 60\n  })) {\n    return {\n      ext: 'mobi',\n      mime: 'application/x-mobipocket-ebook'\n    };\n  }\n\n  // File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n  if (check([0x66, 0x74, 0x79, 0x70], {\n    offset: 4\n  })) {\n    if (check([0x6D, 0x69, 0x66, 0x31], {\n      offset: 8\n    })) {\n      return {\n        ext: 'heic',\n        mime: 'image/heif'\n      };\n    }\n    if (check([0x6D, 0x73, 0x66, 0x31], {\n      offset: 8\n    })) {\n      return {\n        ext: 'heic',\n        mime: 'image/heif-sequence'\n      };\n    }\n    if (check([0x68, 0x65, 0x69, 0x63], {\n      offset: 8\n    }) || check([0x68, 0x65, 0x69, 0x78], {\n      offset: 8\n    })) {\n      return {\n        ext: 'heic',\n        mime: 'image/heic'\n      };\n    }\n    if (check([0x68, 0x65, 0x76, 0x63], {\n      offset: 8\n    }) || check([0x68, 0x65, 0x76, 0x78], {\n      offset: 8\n    })) {\n      return {\n        ext: 'heic',\n        mime: 'image/heic-sequence'\n      };\n    }\n  }\n  if (check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n    return {\n      ext: 'ktx',\n      mime: 'image/ktx'\n    };\n  }\n  if (check([0x44, 0x49, 0x43, 0x4D], {\n    offset: 128\n  })) {\n    return {\n      ext: 'dcm',\n      mime: 'application/dicom'\n    };\n  }\n\n  // Musepack, SV7\n  if (check([0x4D, 0x50, 0x2B])) {\n    return {\n      ext: 'mpc',\n      mime: 'audio/x-musepack'\n    };\n  }\n\n  // Musepack, SV8\n  if (check([0x4D, 0x50, 0x43, 0x4B])) {\n    return {\n      ext: 'mpc',\n      mime: 'audio/x-musepack'\n    };\n  }\n  if (check([0x42, 0x45, 0x47, 0x49, 0x4E, 0x3A])) {\n    return {\n      ext: 'ics',\n      mime: 'text/calendar'\n    };\n  }\n  if (check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n    return {\n      ext: 'glb',\n      mime: 'model/gltf-binary'\n    };\n  }\n  if (check([0xD4, 0xC3, 0xB2, 0xA1]) || check([0xA1, 0xB2, 0xC3, 0xD4])) {\n    return {\n      ext: 'pcap',\n      mime: 'application/vnd.tcpdump.pcap'\n    };\n  }\n  return null;\n};\nmodule.exports = fileType;\n// TODO: Remove this for the next major release\nmodule.exports.default = fileType;\nObject.defineProperty(fileType, 'minimumBytes', {\n  value: 4100\n});\nmodule.exports.stream = readableStream => new Promise((resolve, reject) => {\n  // Using `eval` to work around issues when bundling with Webpack\n  const stream = eval('require')('stream'); // eslint-disable-line no-eval\n\n  readableStream.once('readable', () => {\n    const pass = new stream.PassThrough();\n    const chunk = readableStream.read(module.exports.minimumBytes) || readableStream.read();\n    try {\n      pass.fileType = fileType(chunk);\n    } catch (error) {\n      reject(error);\n    }\n    readableStream.unshift(chunk);\n    if (stream.pipeline) {\n      resolve(stream.pipeline(readableStream, pass, () => {}));\n    } else {\n      resolve(readableStream.pipe(pass));\n    }\n  });\n});","map":{"version":3,"names":["toBytes","s","map","c","charCodeAt","xpiZipFilename","oxmlContentTypes","oxmlRels","readUInt64LE","buf","offset","n","mul","i","fileType","input","Uint8Array","ArrayBuffer","Buffer","isBuffer","TypeError","length","check","header","options","Object","assign","mask","checkString","ext","mime","findNextZipHeaderIndex","arr","startAt","findIndex","el","zipHeaderIndex","oxmlFound","type","sliced","subarray","idPos","docTypePos","findDocType","every","objectSize","start","module","exports","default","defineProperty","value","stream","readableStream","Promise","resolve","reject","eval","once","pass","PassThrough","chunk","read","minimumBytes","error","unshift","pipeline","pipe"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/file-type/index.js"],"sourcesContent":["'use strict';\nconst toBytes = s => [...s].map(c => c.charCodeAt(0));\nconst xpiZipFilename = toBytes('META-INF/mozilla.rsa');\nconst oxmlContentTypes = toBytes('[Content_Types].xml');\nconst oxmlRels = toBytes('_rels/.rels');\n\nfunction readUInt64LE(buf, offset = 0) {\n\tlet n = buf[offset];\n\tlet mul = 1;\n\tlet i = 0;\n\twhile (++i < 8) {\n\t\tmul *= 0x100;\n\t\tn += buf[offset + i] * mul;\n\t}\n\n\treturn n;\n}\n\nconst fileType = input => {\n\tif (!(input instanceof Uint8Array || input instanceof ArrayBuffer || Buffer.isBuffer(input))) {\n\t\tthrow new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`Buffer\\` or \\`ArrayBuffer\\`, got \\`${typeof input}\\``);\n\t}\n\n\tconst buf = input instanceof Uint8Array ? input : new Uint8Array(input);\n\n\tif (!(buf && buf.length > 1)) {\n\t\treturn null;\n\t}\n\n\tconst check = (header, options) => {\n\t\toptions = Object.assign({\n\t\t\toffset: 0\n\t\t}, options);\n\n\t\tfor (let i = 0; i < header.length; i++) {\n\t\t\t// If a bitmask is set\n\t\t\tif (options.mask) {\n\t\t\t\t// If header doesn't equal `buf` with bits masked off\n\t\t\t\tif (header[i] !== (options.mask[i] & buf[i + options.offset])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (header[i] !== buf[i + options.offset]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst checkString = (header, options) => check(toBytes(header), options);\n\n\tif (check([0xFF, 0xD8, 0xFF])) {\n\t\treturn {\n\t\t\text: 'jpg',\n\t\t\tmime: 'image/jpeg'\n\t\t};\n\t}\n\n\tif (check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\treturn {\n\t\t\text: 'png',\n\t\t\tmime: 'image/png'\n\t\t};\n\t}\n\n\tif (check([0x47, 0x49, 0x46])) {\n\t\treturn {\n\t\t\text: 'gif',\n\t\t\tmime: 'image/gif'\n\t\t};\n\t}\n\n\tif (check([0x57, 0x45, 0x42, 0x50], {offset: 8})) {\n\t\treturn {\n\t\t\text: 'webp',\n\t\t\tmime: 'image/webp'\n\t\t};\n\t}\n\n\tif (check([0x46, 0x4C, 0x49, 0x46])) {\n\t\treturn {\n\t\t\text: 'flif',\n\t\t\tmime: 'image/flif'\n\t\t};\n\t}\n\n\t// Needs to be before `tif` check\n\tif (\n\t\t(check([0x49, 0x49, 0x2A, 0x0]) || check([0x4D, 0x4D, 0x0, 0x2A])) &&\n\t\tcheck([0x43, 0x52], {offset: 8})\n\t) {\n\t\treturn {\n\t\t\text: 'cr2',\n\t\t\tmime: 'image/x-canon-cr2'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x49, 0x49, 0x2A, 0x0]) ||\n\t\tcheck([0x4D, 0x4D, 0x0, 0x2A])\n\t) {\n\t\treturn {\n\t\t\text: 'tif',\n\t\t\tmime: 'image/tiff'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x4D])) {\n\t\treturn {\n\t\t\text: 'bmp',\n\t\t\tmime: 'image/bmp'\n\t\t};\n\t}\n\n\tif (check([0x49, 0x49, 0xBC])) {\n\t\treturn {\n\t\t\text: 'jxr',\n\t\t\tmime: 'image/vnd.ms-photo'\n\t\t};\n\t}\n\n\tif (check([0x38, 0x42, 0x50, 0x53])) {\n\t\treturn {\n\t\t\text: 'psd',\n\t\t\tmime: 'image/vnd.adobe.photoshop'\n\t\t};\n\t}\n\n\t// Zip-based file formats\n\t// Need to be before the `zip` check\n\tif (check([0x50, 0x4B, 0x3, 0x4])) {\n\t\tif (\n\t\t\tcheck([0x6D, 0x69, 0x6D, 0x65, 0x74, 0x79, 0x70, 0x65, 0x61, 0x70, 0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x65, 0x70, 0x75, 0x62, 0x2B, 0x7A, 0x69, 0x70], {offset: 30})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'epub',\n\t\t\t\tmime: 'application/epub+zip'\n\t\t\t};\n\t\t}\n\n\t\t// Assumes signed `.xpi` from addons.mozilla.org\n\t\tif (check(xpiZipFilename, {offset: 30})) {\n\t\t\treturn {\n\t\t\t\text: 'xpi',\n\t\t\t\tmime: 'application/x-xpinstall'\n\t\t\t};\n\t\t}\n\n\t\tif (checkString('mimetypeapplication/vnd.oasis.opendocument.text', {offset: 30})) {\n\t\t\treturn {\n\t\t\t\text: 'odt',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.text'\n\t\t\t};\n\t\t}\n\n\t\tif (checkString('mimetypeapplication/vnd.oasis.opendocument.spreadsheet', {offset: 30})) {\n\t\t\treturn {\n\t\t\t\text: 'ods',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.spreadsheet'\n\t\t\t};\n\t\t}\n\n\t\tif (checkString('mimetypeapplication/vnd.oasis.opendocument.presentation', {offset: 30})) {\n\t\t\treturn {\n\t\t\t\text: 'odp',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.presentation'\n\t\t\t};\n\t\t}\n\n\t\t// The docx, xlsx and pptx file types extend the Office Open XML file format:\n\t\t// https://en.wikipedia.org/wiki/Office_Open_XML_file_formats\n\t\t// We look for:\n\t\t// - one entry named '[Content_Types].xml' or '_rels/.rels',\n\t\t// - one entry indicating specific type of file.\n\t\t// MS Office, OpenOffice and LibreOffice may put the parts in different order, so the check should not rely on it.\n\t\tconst findNextZipHeaderIndex = (arr, startAt = 0) => arr.findIndex((el, i, arr) => i >= startAt && arr[i] === 0x50 && arr[i + 1] === 0x4B && arr[i + 2] === 0x3 && arr[i + 3] === 0x4);\n\n\t\tlet zipHeaderIndex = 0; // The first zip header was already found at index 0\n\t\tlet oxmlFound = false;\n\t\tlet type = null;\n\n\t\tdo {\n\t\t\tconst offset = zipHeaderIndex + 30;\n\n\t\t\tif (!oxmlFound) {\n\t\t\t\toxmlFound = (check(oxmlContentTypes, {offset}) || check(oxmlRels, {offset}));\n\t\t\t}\n\n\t\t\tif (!type) {\n\t\t\t\tif (checkString('word/', {offset})) {\n\t\t\t\t\ttype = {\n\t\t\t\t\t\text: 'docx',\n\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n\t\t\t\t\t};\n\t\t\t\t} else if (checkString('ppt/', {offset})) {\n\t\t\t\t\ttype = {\n\t\t\t\t\t\text: 'pptx',\n\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n\t\t\t\t\t};\n\t\t\t\t} else if (checkString('xl/', {offset})) {\n\t\t\t\t\ttype = {\n\t\t\t\t\t\text: 'xlsx',\n\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (oxmlFound && type) {\n\t\t\t\treturn type;\n\t\t\t}\n\n\t\t\tzipHeaderIndex = findNextZipHeaderIndex(buf, offset);\n\t\t} while (zipHeaderIndex >= 0);\n\n\t\t// No more zip parts available in the buffer, but maybe we are almost certain about the type?\n\t\tif (type) {\n\t\t\treturn type;\n\t\t}\n\t}\n\n\tif (\n\t\tcheck([0x50, 0x4B]) &&\n\t\t(buf[2] === 0x3 || buf[2] === 0x5 || buf[2] === 0x7) &&\n\t\t(buf[3] === 0x4 || buf[3] === 0x6 || buf[3] === 0x8)\n\t) {\n\t\treturn {\n\t\t\text: 'zip',\n\t\t\tmime: 'application/zip'\n\t\t};\n\t}\n\n\tif (check([0x75, 0x73, 0x74, 0x61, 0x72], {offset: 257})) {\n\t\treturn {\n\t\t\text: 'tar',\n\t\t\tmime: 'application/x-tar'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7]) &&\n\t\t(buf[6] === 0x0 || buf[6] === 0x1)\n\t) {\n\t\treturn {\n\t\t\text: 'rar',\n\t\t\tmime: 'application/x-rar-compressed'\n\t\t};\n\t}\n\n\tif (check([0x1F, 0x8B, 0x8])) {\n\t\treturn {\n\t\t\text: 'gz',\n\t\t\tmime: 'application/gzip'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x5A, 0x68])) {\n\t\treturn {\n\t\t\text: 'bz2',\n\t\t\tmime: 'application/x-bzip2'\n\t\t};\n\t}\n\n\tif (check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n\t\treturn {\n\t\t\text: '7z',\n\t\t\tmime: 'application/x-7z-compressed'\n\t\t};\n\t}\n\n\tif (check([0x78, 0x01])) {\n\t\treturn {\n\t\t\text: 'dmg',\n\t\t\tmime: 'application/x-apple-diskimage'\n\t\t};\n\t}\n\n\tif (check([0x33, 0x67, 0x70, 0x35]) || // 3gp5\n\t\t(\n\t\t\tcheck([0x0, 0x0, 0x0]) && check([0x66, 0x74, 0x79, 0x70], {offset: 4}) &&\n\t\t\t\t(\n\t\t\t\t\tcheck([0x6D, 0x70, 0x34, 0x31], {offset: 8}) || // MP41\n\t\t\t\t\tcheck([0x6D, 0x70, 0x34, 0x32], {offset: 8}) || // MP42\n\t\t\t\t\tcheck([0x69, 0x73, 0x6F, 0x6D], {offset: 8}) || // ISOM\n\t\t\t\t\tcheck([0x69, 0x73, 0x6F, 0x32], {offset: 8}) || // ISO2\n\t\t\t\t\tcheck([0x6D, 0x6D, 0x70, 0x34], {offset: 8}) || // MMP4\n\t\t\t\t\tcheck([0x4D, 0x34, 0x56], {offset: 8}) || // M4V\n\t\t\t\t\tcheck([0x64, 0x61, 0x73, 0x68], {offset: 8}) // DASH\n\t\t\t\t)\n\t\t)) {\n\t\treturn {\n\t\t\text: 'mp4',\n\t\t\tmime: 'video/mp4'\n\t\t};\n\t}\n\n\tif (check([0x4D, 0x54, 0x68, 0x64])) {\n\t\treturn {\n\t\t\text: 'mid',\n\t\t\tmime: 'audio/midi'\n\t\t};\n\t}\n\n\t// https://github.com/threatstack/libmagic/blob/master/magic/Magdir/matroska\n\tif (check([0x1A, 0x45, 0xDF, 0xA3])) {\n\t\tconst sliced = buf.subarray(4, 4 + 4096);\n\t\tconst idPos = sliced.findIndex((el, i, arr) => arr[i] === 0x42 && arr[i + 1] === 0x82);\n\n\t\tif (idPos !== -1) {\n\t\t\tconst docTypePos = idPos + 3;\n\t\t\tconst findDocType = type => [...type].every((c, i) => sliced[docTypePos + i] === c.charCodeAt(0));\n\n\t\t\tif (findDocType('matroska')) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mkv',\n\t\t\t\t\tmime: 'video/x-matroska'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (findDocType('webm')) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'webm',\n\t\t\t\t\tmime: 'video/webm'\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tif (check([0x0, 0x0, 0x0, 0x14, 0x66, 0x74, 0x79, 0x70, 0x71, 0x74, 0x20, 0x20]) ||\n\t\tcheck([0x66, 0x72, 0x65, 0x65], {offset: 4}) || // Type: `free`\n\t\tcheck([0x66, 0x74, 0x79, 0x70, 0x71, 0x74, 0x20, 0x20], {offset: 4}) ||\n\t\tcheck([0x6D, 0x64, 0x61, 0x74], {offset: 4}) || // MJPEG\n\t\tcheck([0x6D, 0x6F, 0x6F, 0x76], {offset: 4}) || // Type: `moov`\n\t\tcheck([0x77, 0x69, 0x64, 0x65], {offset: 4})) {\n\t\treturn {\n\t\t\text: 'mov',\n\t\t\tmime: 'video/quicktime'\n\t\t};\n\t}\n\n\t// RIFF file format which might be AVI, WAV, QCP, etc\n\tif (check([0x52, 0x49, 0x46, 0x46])) {\n\t\tif (check([0x41, 0x56, 0x49], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'avi',\n\t\t\t\tmime: 'video/vnd.avi'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x57, 0x41, 0x56, 0x45], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'wav',\n\t\t\t\tmime: 'audio/vnd.wave'\n\t\t\t};\n\t\t}\n\n\t\t// QLCM, QCP file\n\t\tif (check([0x51, 0x4C, 0x43, 0x4D], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'qcp',\n\t\t\t\tmime: 'audio/qcelp'\n\t\t\t};\n\t\t}\n\t}\n\n\t// ASF_Header_Object first 80 bytes\n\tif (check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n\t\t// Search for header should be in first 1KB of file.\n\n\t\tlet offset = 30;\n\t\tdo {\n\t\t\tconst objectSize = readUInt64LE(buf, offset + 16);\n\t\t\tif (check([0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65], {offset})) {\n\t\t\t\t// Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n\t\t\t\tif (check([0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B], {offset: offset + 24})) {\n\t\t\t\t\t// Found audio:\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'wma',\n\t\t\t\t\t\tmime: 'audio/x-ms-wma'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (check([0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B], {offset: offset + 24})) {\n\t\t\t\t\t// Found video:\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'wmv',\n\t\t\t\t\t\tmime: 'video/x-ms-asf'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\toffset += objectSize;\n\t\t} while (offset + 24 <= buf.length);\n\n\t\t// Default to ASF generic extension\n\t\treturn {\n\t\t\text: 'asf',\n\t\t\tmime: 'application/vnd.ms-asf'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x0, 0x0, 0x1, 0xBA]) ||\n\t\tcheck([0x0, 0x0, 0x1, 0xB3])\n\t) {\n\t\treturn {\n\t\t\text: 'mpg',\n\t\t\tmime: 'video/mpeg'\n\t\t};\n\t}\n\n\tif (check([0x66, 0x74, 0x79, 0x70, 0x33, 0x67], {offset: 4})) {\n\t\treturn {\n\t\t\text: '3gp',\n\t\t\tmime: 'video/3gpp'\n\t\t};\n\t}\n\n\t// Check for MPEG header at different starting offsets\n\tfor (let start = 0; start < 2 && start < (buf.length - 16); start++) {\n\t\tif (\n\t\t\tcheck([0x49, 0x44, 0x33], {offset: start}) || // ID3 header\n\t\t\tcheck([0xFF, 0xE2], {offset: start, mask: [0xFF, 0xE2]}) // MPEG 1 or 2 Layer 3 header\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mp3',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tcheck([0xFF, 0xE4], {offset: start, mask: [0xFF, 0xE4]}) // MPEG 1 or 2 Layer 2 header\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mp2',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tcheck([0xFF, 0xF8], {offset: start, mask: [0xFF, 0xFC]}) // MPEG 2 layer 0 using ADTS\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mp2',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tcheck([0xFF, 0xF0], {offset: start, mask: [0xFF, 0xFC]}) // MPEG 4 layer 0 using ADTS\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mp4',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\t}\n\n\tif (\n\t\tcheck([0x66, 0x74, 0x79, 0x70, 0x4D, 0x34, 0x41], {offset: 4})\n\t) {\n\t\treturn { // MPEG-4 layer 3 (audio)\n\t\t\text: 'm4a',\n\t\t\tmime: 'audio/mp4' // RFC 4337\n\t\t};\n\t}\n\n\t// Needs to be before `ogg` check\n\tif (check([0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64], {offset: 28})) {\n\t\treturn {\n\t\t\text: 'opus',\n\t\t\tmime: 'audio/opus'\n\t\t};\n\t}\n\n\t// If 'OggS' in first  bytes, then OGG container\n\tif (check([0x4F, 0x67, 0x67, 0x53])) {\n\t\t// This is a OGG container\n\n\t\t// If ' theora' in header.\n\t\tif (check([0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'ogv',\n\t\t\t\tmime: 'video/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// If '\\x01video' in header.\n\t\tif (check([0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'ogm',\n\t\t\t\tmime: 'video/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// If ' FLAC' in header  https://xiph.org/flac/faq.html\n\t\tif (check([0x7F, 0x46, 0x4C, 0x41, 0x43], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'oga',\n\t\t\t\tmime: 'audio/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n\t\tif (check([0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'spx',\n\t\t\t\tmime: 'audio/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// If '\\x01vorbis' in header\n\t\tif (check([0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'ogg',\n\t\t\t\tmime: 'audio/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n\t\treturn {\n\t\t\text: 'ogx',\n\t\t\tmime: 'application/ogg'\n\t\t};\n\t}\n\n\tif (check([0x66, 0x4C, 0x61, 0x43])) {\n\t\treturn {\n\t\t\text: 'flac',\n\t\t\tmime: 'audio/x-flac'\n\t\t};\n\t}\n\n\tif (check([0x4D, 0x41, 0x43, 0x20])) { // 'MAC '\n\t\treturn {\n\t\t\text: 'ape',\n\t\t\tmime: 'audio/ape'\n\t\t};\n\t}\n\n\tif (check([0x77, 0x76, 0x70, 0x6B])) { // 'wvpk'\n\t\treturn {\n\t\t\text: 'wv',\n\t\t\tmime: 'audio/wavpack'\n\t\t};\n\t}\n\n\tif (check([0x23, 0x21, 0x41, 0x4D, 0x52, 0x0A])) {\n\t\treturn {\n\t\t\text: 'amr',\n\t\t\tmime: 'audio/amr'\n\t\t};\n\t}\n\n\tif (check([0x25, 0x50, 0x44, 0x46])) {\n\t\treturn {\n\t\t\text: 'pdf',\n\t\t\tmime: 'application/pdf'\n\t\t};\n\t}\n\n\tif (check([0x4D, 0x5A])) {\n\t\treturn {\n\t\t\text: 'exe',\n\t\t\tmime: 'application/x-msdownload'\n\t\t};\n\t}\n\n\tif (\n\t\t(buf[0] === 0x43 || buf[0] === 0x46) &&\n\t\tcheck([0x57, 0x53], {offset: 1})\n\t) {\n\t\treturn {\n\t\t\text: 'swf',\n\t\t\tmime: 'application/x-shockwave-flash'\n\t\t};\n\t}\n\n\tif (check([0x7B, 0x5C, 0x72, 0x74, 0x66])) {\n\t\treturn {\n\t\t\text: 'rtf',\n\t\t\tmime: 'application/rtf'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x61, 0x73, 0x6D])) {\n\t\treturn {\n\t\t\text: 'wasm',\n\t\t\tmime: 'application/wasm'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x77, 0x4F, 0x46, 0x46]) &&\n\t\t(\n\t\t\tcheck([0x00, 0x01, 0x00, 0x00], {offset: 4}) ||\n\t\t\tcheck([0x4F, 0x54, 0x54, 0x4F], {offset: 4})\n\t\t)\n\t) {\n\t\treturn {\n\t\t\text: 'woff',\n\t\t\tmime: 'font/woff'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x77, 0x4F, 0x46, 0x32]) &&\n\t\t(\n\t\t\tcheck([0x00, 0x01, 0x00, 0x00], {offset: 4}) ||\n\t\t\tcheck([0x4F, 0x54, 0x54, 0x4F], {offset: 4})\n\t\t)\n\t) {\n\t\treturn {\n\t\t\text: 'woff2',\n\t\t\tmime: 'font/woff2'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x4C, 0x50], {offset: 34}) &&\n\t\t(\n\t\t\tcheck([0x00, 0x00, 0x01], {offset: 8}) ||\n\t\t\tcheck([0x01, 0x00, 0x02], {offset: 8}) ||\n\t\t\tcheck([0x02, 0x00, 0x02], {offset: 8})\n\t\t)\n\t) {\n\t\treturn {\n\t\t\text: 'eot',\n\t\t\tmime: 'application/vnd.ms-fontobject'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n\t\treturn {\n\t\t\text: 'ttf',\n\t\t\tmime: 'font/ttf'\n\t\t};\n\t}\n\n\tif (check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n\t\treturn {\n\t\t\text: 'otf',\n\t\t\tmime: 'font/otf'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x00, 0x01, 0x00])) {\n\t\treturn {\n\t\t\text: 'ico',\n\t\t\tmime: 'image/x-icon'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x00, 0x02, 0x00])) {\n\t\treturn {\n\t\t\text: 'cur',\n\t\t\tmime: 'image/x-icon'\n\t\t};\n\t}\n\n\tif (check([0x46, 0x4C, 0x56, 0x01])) {\n\t\treturn {\n\t\t\text: 'flv',\n\t\t\tmime: 'video/x-flv'\n\t\t};\n\t}\n\n\tif (check([0x25, 0x21])) {\n\t\treturn {\n\t\t\text: 'ps',\n\t\t\tmime: 'application/postscript'\n\t\t};\n\t}\n\n\tif (check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n\t\treturn {\n\t\t\text: 'xz',\n\t\t\tmime: 'application/x-xz'\n\t\t};\n\t}\n\n\tif (check([0x53, 0x51, 0x4C, 0x69])) {\n\t\treturn {\n\t\t\text: 'sqlite',\n\t\t\tmime: 'application/x-sqlite3'\n\t\t};\n\t}\n\n\tif (check([0x4E, 0x45, 0x53, 0x1A])) {\n\t\treturn {\n\t\t\text: 'nes',\n\t\t\tmime: 'application/x-nintendo-nes-rom'\n\t\t};\n\t}\n\n\tif (check([0x43, 0x72, 0x32, 0x34])) {\n\t\treturn {\n\t\t\text: 'crx',\n\t\t\tmime: 'application/x-google-chrome-extension'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x4D, 0x53, 0x43, 0x46]) ||\n\t\tcheck([0x49, 0x53, 0x63, 0x28])\n\t) {\n\t\treturn {\n\t\t\text: 'cab',\n\t\t\tmime: 'application/vnd.ms-cab-compressed'\n\t\t};\n\t}\n\n\t// Needs to be before `ar` check\n\tif (check([0x21, 0x3C, 0x61, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x64, 0x65, 0x62, 0x69, 0x61, 0x6E, 0x2D, 0x62, 0x69, 0x6E, 0x61, 0x72, 0x79])) {\n\t\treturn {\n\t\t\text: 'deb',\n\t\t\tmime: 'application/x-deb'\n\t\t};\n\t}\n\n\tif (check([0x21, 0x3C, 0x61, 0x72, 0x63, 0x68, 0x3E])) {\n\t\treturn {\n\t\t\text: 'ar',\n\t\t\tmime: 'application/x-unix-archive'\n\t\t};\n\t}\n\n\tif (check([0xED, 0xAB, 0xEE, 0xDB])) {\n\t\treturn {\n\t\t\text: 'rpm',\n\t\t\tmime: 'application/x-rpm'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x1F, 0xA0]) ||\n\t\tcheck([0x1F, 0x9D])\n\t) {\n\t\treturn {\n\t\t\text: 'Z',\n\t\t\tmime: 'application/x-compress'\n\t\t};\n\t}\n\n\tif (check([0x4C, 0x5A, 0x49, 0x50])) {\n\t\treturn {\n\t\t\text: 'lz',\n\t\t\tmime: 'application/x-lzip'\n\t\t};\n\t}\n\n\tif (check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n\t\treturn {\n\t\t\text: 'msi',\n\t\t\tmime: 'application/x-msi'\n\t\t};\n\t}\n\n\tif (check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n\t\treturn {\n\t\t\text: 'mxf',\n\t\t\tmime: 'application/mxf'\n\t\t};\n\t}\n\n\tif (check([0x47], {offset: 4}) && (check([0x47], {offset: 192}) || check([0x47], {offset: 196}))) {\n\t\treturn {\n\t\t\text: 'mts',\n\t\t\tmime: 'video/mp2t'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x4C, 0x45, 0x4E, 0x44, 0x45, 0x52])) {\n\t\treturn {\n\t\t\text: 'blend',\n\t\t\tmime: 'application/x-blender'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x50, 0x47, 0xFB])) {\n\t\treturn {\n\t\t\text: 'bpg',\n\t\t\tmime: 'image/bpg'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n\t\t// JPEG-2000 family\n\n\t\tif (check([0x6A, 0x70, 0x32, 0x20], {offset: 20})) {\n\t\t\treturn {\n\t\t\t\text: 'jp2',\n\t\t\t\tmime: 'image/jp2'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x6A, 0x70, 0x78, 0x20], {offset: 20})) {\n\t\t\treturn {\n\t\t\t\text: 'jpx',\n\t\t\t\tmime: 'image/jpx'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x6A, 0x70, 0x6D, 0x20], {offset: 20})) {\n\t\t\treturn {\n\t\t\t\text: 'jpm',\n\t\t\t\tmime: 'image/jpm'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x6D, 0x6A, 0x70, 0x32], {offset: 20})) {\n\t\t\treturn {\n\t\t\t\text: 'mj2',\n\t\t\t\tmime: 'image/mj2'\n\t\t\t};\n\t\t}\n\t}\n\n\tif (check([0x46, 0x4F, 0x52, 0x4D])) {\n\t\treturn {\n\t\t\text: 'aif',\n\t\t\tmime: 'audio/aiff'\n\t\t};\n\t}\n\n\tif (checkString('<?xml ')) {\n\t\treturn {\n\t\t\text: 'xml',\n\t\t\tmime: 'application/xml'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {offset: 60})) {\n\t\treturn {\n\t\t\text: 'mobi',\n\t\t\tmime: 'application/x-mobipocket-ebook'\n\t\t};\n\t}\n\n\t// File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n\tif (check([0x66, 0x74, 0x79, 0x70], {offset: 4})) {\n\t\tif (check([0x6D, 0x69, 0x66, 0x31], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'heic',\n\t\t\t\tmime: 'image/heif'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x6D, 0x73, 0x66, 0x31], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'heic',\n\t\t\t\tmime: 'image/heif-sequence'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x68, 0x65, 0x69, 0x63], {offset: 8}) || check([0x68, 0x65, 0x69, 0x78], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'heic',\n\t\t\t\tmime: 'image/heic'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x68, 0x65, 0x76, 0x63], {offset: 8}) || check([0x68, 0x65, 0x76, 0x78], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'heic',\n\t\t\t\tmime: 'image/heic-sequence'\n\t\t\t};\n\t\t}\n\t}\n\n\tif (check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\treturn {\n\t\t\text: 'ktx',\n\t\t\tmime: 'image/ktx'\n\t\t};\n\t}\n\n\tif (check([0x44, 0x49, 0x43, 0x4D], {offset: 128})) {\n\t\treturn {\n\t\t\text: 'dcm',\n\t\t\tmime: 'application/dicom'\n\t\t};\n\t}\n\n\t// Musepack, SV7\n\tif (check([0x4D, 0x50, 0x2B])) {\n\t\treturn {\n\t\t\text: 'mpc',\n\t\t\tmime: 'audio/x-musepack'\n\t\t};\n\t}\n\n\t// Musepack, SV8\n\tif (check([0x4D, 0x50, 0x43, 0x4B])) {\n\t\treturn {\n\t\t\text: 'mpc',\n\t\t\tmime: 'audio/x-musepack'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x45, 0x47, 0x49, 0x4E, 0x3A])) {\n\t\treturn {\n\t\t\text: 'ics',\n\t\t\tmime: 'text/calendar'\n\t\t};\n\t}\n\n\tif (check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n\t\treturn {\n\t\t\text: 'glb',\n\t\t\tmime: 'model/gltf-binary'\n\t\t};\n\t}\n\n\tif (check([0xD4, 0xC3, 0xB2, 0xA1]) || check([0xA1, 0xB2, 0xC3, 0xD4])) {\n\t\treturn {\n\t\t\text: 'pcap',\n\t\t\tmime: 'application/vnd.tcpdump.pcap'\n\t\t};\n\t}\n\n\treturn null;\n};\n\nmodule.exports = fileType;\n// TODO: Remove this for the next major release\nmodule.exports.default = fileType;\n\nObject.defineProperty(fileType, 'minimumBytes', {value: 4100});\n\nmodule.exports.stream = readableStream => new Promise((resolve, reject) => {\n\t// Using `eval` to work around issues when bundling with Webpack\n\tconst stream = eval('require')('stream'); // eslint-disable-line no-eval\n\n\treadableStream.once('readable', () => {\n\t\tconst pass = new stream.PassThrough();\n\t\tconst chunk = readableStream.read(module.exports.minimumBytes) || readableStream.read();\n\t\ttry {\n\t\t\tpass.fileType = fileType(chunk);\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\n\t\treadableStream.unshift(chunk);\n\n\t\tif (stream.pipeline) {\n\t\t\tresolve(stream.pipeline(readableStream, pass, () => {}));\n\t\t} else {\n\t\t\tresolve(readableStream.pipe(pass));\n\t\t}\n\t});\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}