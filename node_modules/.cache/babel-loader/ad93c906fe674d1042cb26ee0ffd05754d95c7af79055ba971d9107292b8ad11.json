{"ast":null,"code":"/**\n * Allows to generate an array of points for a binary image (bit depth = 1)\n * @memberof Image\n * @instance\n * @return {Array<Array<number>>} - an array of [x,y] corresponding to the set pixels in the binary image\n */\nexport default function points() {\n  this.checkProcessable('points', {\n    bitDepth: [1]\n  });\n  const pixels = [];\n  for (let x = 0; x < this.width; x++) {\n    for (let y = 0; y < this.height; y++) {\n      if (this.getBitXY(x, y) === 1) {\n        pixels.push([x, y]);\n      }\n    }\n  }\n  return pixels;\n}","map":{"version":3,"names":["points","checkProcessable","bitDepth","pixels","x","width","y","height","getBitXY","push"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/image-js/src/image/compute/points.js"],"sourcesContent":["/**\n * Allows to generate an array of points for a binary image (bit depth = 1)\n * @memberof Image\n * @instance\n * @return {Array<Array<number>>} - an array of [x,y] corresponding to the set pixels in the binary image\n */\nexport default function points() {\n  this.checkProcessable('points', {\n    bitDepth: [1],\n  });\n\n  const pixels = [];\n  for (let x = 0; x < this.width; x++) {\n    for (let y = 0; y < this.height; y++) {\n      if (this.getBitXY(x, y) === 1) {\n        pixels.push([x, y]);\n      }\n    }\n  }\n  return pixels;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,MAAMA,CAAA,EAAG;EAC/B,IAAI,CAACC,gBAAgB,CAAC,QAAQ,EAAE;IAC9BC,QAAQ,EAAE,CAAC,CAAC;EACd,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACC,KAAK,EAAED,CAAC,EAAE,EAAE;IACnC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACC,MAAM,EAAED,CAAC,EAAE,EAAE;MACpC,IAAI,IAAI,CAACE,QAAQ,CAACJ,CAAC,EAAEE,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7BH,MAAM,CAACM,IAAI,CAAC,CAACL,CAAC,EAAEE,CAAC,CAAC,CAAC;MACrB;IACF;EACF;EACA,OAAOH,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}