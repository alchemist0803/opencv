{"ast":null,"code":"/**\n * Nearest neighbor resizing algorithm\n * @private\n * @param {Image} newImage\n * @param {number} newWidth\n * @param {number} newHeight\n */\nexport default function nearestNeighbor(newImage, newWidth, newHeight) {\n  const wRatio = this.width / newWidth;\n  const hRatio = this.height / newHeight;\n  if (this.bitDepth > 1) {\n    for (let i = 0; i < newWidth; i++) {\n      const w = Math.floor((i + 0.5) * wRatio);\n      for (let j = 0; j < newHeight; j++) {\n        const h = Math.floor((j + 0.5) * hRatio);\n        for (let c = 0; c < this.channels; c++) {\n          newImage.setValueXY(i, j, c, this.getValueXY(w, h, c));\n        }\n      }\n    }\n  } else {\n    for (let i = 0; i < newWidth; i++) {\n      const w = Math.floor((i + 0.5) * wRatio);\n      for (let j = 0; j < newHeight; j++) {\n        const h = Math.floor((j + 0.5) * hRatio);\n        if (this.getBitXY(w, h)) {\n          newImage.setBitXY(i, j);\n        }\n      }\n    }\n  }\n}","map":{"version":3,"names":["nearestNeighbor","newImage","newWidth","newHeight","wRatio","width","hRatio","height","bitDepth","i","w","Math","floor","j","h","c","channels","setValueXY","getValueXY","getBitXY","setBitXY"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/image-js/src/image/transform/resize/nearestNeighbor.js"],"sourcesContent":["/**\n * Nearest neighbor resizing algorithm\n * @private\n * @param {Image} newImage\n * @param {number} newWidth\n * @param {number} newHeight\n */\nexport default function nearestNeighbor(newImage, newWidth, newHeight) {\n  const wRatio = this.width / newWidth;\n  const hRatio = this.height / newHeight;\n\n  if (this.bitDepth > 1) {\n    for (let i = 0; i < newWidth; i++) {\n      const w = Math.floor((i + 0.5) * wRatio);\n      for (let j = 0; j < newHeight; j++) {\n        const h = Math.floor((j + 0.5) * hRatio);\n        for (let c = 0; c < this.channels; c++) {\n          newImage.setValueXY(i, j, c, this.getValueXY(w, h, c));\n        }\n      }\n    }\n  } else {\n    for (let i = 0; i < newWidth; i++) {\n      const w = Math.floor((i + 0.5) * wRatio);\n      for (let j = 0; j < newHeight; j++) {\n        const h = Math.floor((j + 0.5) * hRatio);\n        if (this.getBitXY(w, h)) {\n          newImage.setBitXY(i, j);\n        }\n      }\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,eAAeA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,EAAE;EACrE,MAAMC,MAAM,GAAG,IAAI,CAACC,KAAK,GAAGH,QAAQ;EACpC,MAAMI,MAAM,GAAG,IAAI,CAACC,MAAM,GAAGJ,SAAS;EAEtC,IAAI,IAAI,CAACK,QAAQ,GAAG,CAAC,EAAE;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,QAAQ,EAAEO,CAAC,EAAE,EAAE;MACjC,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,CAAC,GAAG,GAAG,IAAIL,MAAM,CAAC;MACxC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,SAAS,EAAEU,CAAC,EAAE,EAAE;QAClC,MAAMC,CAAC,GAAGH,IAAI,CAACC,KAAK,CAAC,CAACC,CAAC,GAAG,GAAG,IAAIP,MAAM,CAAC;QACxC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACC,QAAQ,EAAED,CAAC,EAAE,EAAE;UACtCd,QAAQ,CAACgB,UAAU,CAACR,CAAC,EAAEI,CAAC,EAAEE,CAAC,EAAE,IAAI,CAACG,UAAU,CAACR,CAAC,EAAEI,CAAC,EAAEC,CAAC,CAAC,CAAC;QACxD;MACF;IACF;EACF,CAAC,MAAM;IACL,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,QAAQ,EAAEO,CAAC,EAAE,EAAE;MACjC,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,CAAC,GAAG,GAAG,IAAIL,MAAM,CAAC;MACxC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,SAAS,EAAEU,CAAC,EAAE,EAAE;QAClC,MAAMC,CAAC,GAAGH,IAAI,CAACC,KAAK,CAAC,CAACC,CAAC,GAAG,GAAG,IAAIP,MAAM,CAAC;QACxC,IAAI,IAAI,CAACa,QAAQ,CAACT,CAAC,EAAEI,CAAC,CAAC,EAAE;UACvBb,QAAQ,CAACmB,QAAQ,CAACX,CAAC,EAAEI,CAAC,CAAC;QACzB;MACF;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}