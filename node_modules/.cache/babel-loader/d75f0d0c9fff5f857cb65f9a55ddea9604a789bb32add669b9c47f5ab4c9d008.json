{"ast":null,"code":"\"use strict\";\n\nvar twoProduct = require(\"two-product\");\nvar robustSum = require(\"robust-sum\");\nvar robustScale = require(\"robust-scale\");\nvar robustSubtract = require(\"robust-subtract\");\nvar NUM_EXPAND = 5;\nvar EPSILON = 1.1102230246251565e-16;\nvar ERRBOUND3 = (3.0 + 16.0 * EPSILON) * EPSILON;\nvar ERRBOUND4 = (7.0 + 56.0 * EPSILON) * EPSILON;\nfunction orientation_3(sum, prod, scale, sub) {\n  return function orientation3Exact(m0, m1, m2) {\n    var p = sum(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])));\n    var n = sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0]));\n    var d = sub(p, n);\n    return d[d.length - 1];\n  };\n}\nfunction orientation_4(sum, prod, scale, sub) {\n  return function orientation4Exact(m0, m1, m2, m3) {\n    var p = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))));\n    var n = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))));\n    var d = sub(p, n);\n    return d[d.length - 1];\n  };\n}\nfunction orientation_5(sum, prod, scale, sub) {\n  return function orientation5Exact(m0, m1, m2, m3, m4) {\n    var p = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m1[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), -m2[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m3[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), -m4[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m1[3])))), sum(sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m3[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), -m4[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), m0[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m1[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m3[3])))));\n    var n = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m2[3])), sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), m3[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m4[3]))), sum(sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), -m1[3])), sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m4[3]))));\n    var d = sub(p, n);\n    return d[d.length - 1];\n  };\n}\nfunction orientation(n) {\n  var fn = n === 3 ? orientation_3 : n === 4 ? orientation_4 : orientation_5;\n  return fn(robustSum, twoProduct, robustScale, robustSubtract);\n}\nvar orientation3Exact = orientation(3);\nvar orientation4Exact = orientation(4);\nvar CACHED = [function orientation0() {\n  return 0;\n}, function orientation1() {\n  return 0;\n}, function orientation2(a, b) {\n  return b[0] - a[0];\n}, function orientation3(a, b, c) {\n  var l = (a[1] - c[1]) * (b[0] - c[0]);\n  var r = (a[0] - c[0]) * (b[1] - c[1]);\n  var det = l - r;\n  var s;\n  if (l > 0) {\n    if (r <= 0) {\n      return det;\n    } else {\n      s = l + r;\n    }\n  } else if (l < 0) {\n    if (r >= 0) {\n      return det;\n    } else {\n      s = -(l + r);\n    }\n  } else {\n    return det;\n  }\n  var tol = ERRBOUND3 * s;\n  if (det >= tol || det <= -tol) {\n    return det;\n  }\n  return orientation3Exact(a, b, c);\n}, function orientation4(a, b, c, d) {\n  var adx = a[0] - d[0];\n  var bdx = b[0] - d[0];\n  var cdx = c[0] - d[0];\n  var ady = a[1] - d[1];\n  var bdy = b[1] - d[1];\n  var cdy = c[1] - d[1];\n  var adz = a[2] - d[2];\n  var bdz = b[2] - d[2];\n  var cdz = c[2] - d[2];\n  var bdxcdy = bdx * cdy;\n  var cdxbdy = cdx * bdy;\n  var cdxady = cdx * ady;\n  var adxcdy = adx * cdy;\n  var adxbdy = adx * bdy;\n  var bdxady = bdx * ady;\n  var det = adz * (bdxcdy - cdxbdy) + bdz * (cdxady - adxcdy) + cdz * (adxbdy - bdxady);\n  var permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n  var tol = ERRBOUND4 * permanent;\n  if (det > tol || -det > tol) {\n    return det;\n  }\n  return orientation4Exact(a, b, c, d);\n}];\nfunction slowOrient(args) {\n  var proc = CACHED[args.length];\n  if (!proc) {\n    proc = CACHED[args.length] = orientation(args.length);\n  }\n  return proc.apply(undefined, args);\n}\nfunction proc(slow, o0, o1, o2, o3, o4, o5) {\n  return function getOrientation(a0, a1, a2, a3, a4) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return 0;\n      case 2:\n        return o2(a0, a1);\n      case 3:\n        return o3(a0, a1, a2);\n      case 4:\n        return o4(a0, a1, a2, a3);\n      case 5:\n        return o5(a0, a1, a2, a3, a4);\n    }\n    var s = new Array(arguments.length);\n    for (var i = 0; i < arguments.length; ++i) {\n      s[i] = arguments[i];\n    }\n    return slow(s);\n  };\n}\nfunction generateOrientationProc() {\n  while (CACHED.length <= NUM_EXPAND) {\n    CACHED.push(orientation(CACHED.length));\n  }\n  module.exports = proc.apply(undefined, [slowOrient].concat(CACHED));\n  for (var i = 0; i <= NUM_EXPAND; ++i) {\n    module.exports[i] = CACHED[i];\n  }\n}\ngenerateOrientationProc();","map":{"version":3,"names":["twoProduct","require","robustSum","robustScale","robustSubtract","NUM_EXPAND","EPSILON","ERRBOUND3","ERRBOUND4","orientation_3","sum","prod","scale","sub","orientation3Exact","m0","m1","m2","p","n","d","length","orientation_4","orientation4Exact","m3","orientation_5","orientation5Exact","m4","orientation","fn","CACHED","orientation0","orientation1","orientation2","a","b","orientation3","c","l","r","det","s","tol","orientation4","adx","bdx","cdx","ady","bdy","cdy","adz","bdz","cdz","bdxcdy","cdxbdy","cdxady","adxcdy","adxbdy","bdxady","permanent","Math","abs","slowOrient","args","proc","apply","undefined","slow","o0","o1","o2","o3","o4","o5","getOrientation","a0","a1","a2","a3","a4","arguments","Array","i","generateOrientationProc","push","module","exports","concat"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/robust-orientation/orientation.js"],"sourcesContent":["\"use strict\"\n\nvar twoProduct = require(\"two-product\")\nvar robustSum = require(\"robust-sum\")\nvar robustScale = require(\"robust-scale\")\nvar robustSubtract = require(\"robust-subtract\")\n\nvar NUM_EXPAND = 5\n\nvar EPSILON     = 1.1102230246251565e-16\nvar ERRBOUND3   = (3.0 + 16.0 * EPSILON) * EPSILON\nvar ERRBOUND4   = (7.0 + 56.0 * EPSILON) * EPSILON\n\nfunction orientation_3(sum, prod, scale, sub) {\n  return function orientation3Exact(m0, m1, m2) {\n    var p = sum(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])))\n    var n = sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0]))\n    var d = sub(p, n)\n    return d[d.length - 1]\n  }\n}\n\nfunction orientation_4(sum, prod, scale, sub) {\n  return function orientation4Exact(m0, m1, m2, m3) {\n    var p = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))))\n    var n = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))))\n    var d = sub(p, n)\n    return d[d.length - 1]\n  }\n}\n\nfunction orientation_5(sum, prod, scale, sub) {\n  return function orientation5Exact(m0, m1, m2, m3, m4) {\n    var p = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m1[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), -m2[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m3[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), -m4[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m1[3])))), sum(sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m3[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), -m4[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), m0[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m1[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m3[3])))))\n    var n = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m2[3])), sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), m3[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m4[3]))), sum(sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), -m1[3])), sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m4[3]))))\n    var d = sub(p, n)\n    return d[d.length - 1]\n  }\n}\n\nfunction orientation(n) {\n  var fn =\n    n === 3 ? orientation_3 :\n    n === 4 ? orientation_4 : orientation_5\n\n  return fn(robustSum, twoProduct, robustScale, robustSubtract)\n}\n\nvar orientation3Exact = orientation(3)\nvar orientation4Exact = orientation(4)\n\nvar CACHED = [\n  function orientation0() { return 0 },\n  function orientation1() { return 0 },\n  function orientation2(a, b) {\n    return b[0] - a[0]\n  },\n  function orientation3(a, b, c) {\n    var l = (a[1] - c[1]) * (b[0] - c[0])\n    var r = (a[0] - c[0]) * (b[1] - c[1])\n    var det = l - r\n    var s\n    if(l > 0) {\n      if(r <= 0) {\n        return det\n      } else {\n        s = l + r\n      }\n    } else if(l < 0) {\n      if(r >= 0) {\n        return det\n      } else {\n        s = -(l + r)\n      }\n    } else {\n      return det\n    }\n    var tol = ERRBOUND3 * s\n    if(det >= tol || det <= -tol) {\n      return det\n    }\n    return orientation3Exact(a, b, c)\n  },\n  function orientation4(a,b,c,d) {\n    var adx = a[0] - d[0]\n    var bdx = b[0] - d[0]\n    var cdx = c[0] - d[0]\n    var ady = a[1] - d[1]\n    var bdy = b[1] - d[1]\n    var cdy = c[1] - d[1]\n    var adz = a[2] - d[2]\n    var bdz = b[2] - d[2]\n    var cdz = c[2] - d[2]\n    var bdxcdy = bdx * cdy\n    var cdxbdy = cdx * bdy\n    var cdxady = cdx * ady\n    var adxcdy = adx * cdy\n    var adxbdy = adx * bdy\n    var bdxady = bdx * ady\n    var det = adz * (bdxcdy - cdxbdy)\n            + bdz * (cdxady - adxcdy)\n            + cdz * (adxbdy - bdxady)\n    var permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz)\n                  + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz)\n                  + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz)\n    var tol = ERRBOUND4 * permanent\n    if ((det > tol) || (-det > tol)) {\n      return det\n    }\n    return orientation4Exact(a,b,c,d)\n  }\n]\n\nfunction slowOrient(args) {\n  var proc = CACHED[args.length]\n  if(!proc) {\n    proc = CACHED[args.length] = orientation(args.length)\n  }\n  return proc.apply(undefined, args)\n}\n\nfunction proc (slow, o0, o1, o2, o3, o4, o5) {\n  return function getOrientation(a0, a1, a2, a3, a4) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return 0;\n      case 2:\n        return o2(a0, a1)\n      case 3:\n        return o3(a0, a1, a2)\n      case 4:\n        return o4(a0, a1, a2, a3)\n      case 5:\n        return o5(a0, a1, a2, a3, a4)\n    }\n\n    var s = new Array(arguments.length)\n    for (var i = 0; i < arguments.length; ++i) {\n      s[i] = arguments[i]\n    }\n    return slow(s)\n  }\n}\n\nfunction generateOrientationProc() {\n  while(CACHED.length <= NUM_EXPAND) {\n    CACHED.push(orientation(CACHED.length))\n  }\n  module.exports = proc.apply(undefined, [slowOrient].concat(CACHED))\n  for(var i=0; i<=NUM_EXPAND; ++i) {\n    module.exports[i] = CACHED[i]\n  }\n}\n\ngenerateOrientationProc()"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAa,CAAC;AACvC,IAAIC,SAAS,GAAGD,OAAO,CAAC,YAAY,CAAC;AACrC,IAAIE,WAAW,GAAGF,OAAO,CAAC,cAAc,CAAC;AACzC,IAAIG,cAAc,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAE/C,IAAII,UAAU,GAAG,CAAC;AAElB,IAAIC,OAAO,GAAO,sBAAsB;AACxC,IAAIC,SAAS,GAAK,CAAC,GAAG,GAAG,IAAI,GAAGD,OAAO,IAAIA,OAAO;AAClD,IAAIE,SAAS,GAAK,CAAC,GAAG,GAAG,IAAI,GAAGF,OAAO,IAAIA,OAAO;AAElD,SAASG,aAAaA,CAACC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAE;EAC5C,OAAO,SAASC,iBAAiBA,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IAC5C,IAAIC,CAAC,GAAGR,GAAG,CAACA,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,IAAI,CAAC,CAACK,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvG,IAAII,CAAC,GAAGT,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,IAAIK,CAAC,GAAGP,GAAG,CAACK,CAAC,EAAEC,CAAC,CAAC;IACjB,OAAOC,CAAC,CAACA,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC;EACxB,CAAC;AACH;AAEA,SAASC,aAAaA,CAACZ,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAE;EAC5C,OAAO,SAASU,iBAAiBA,CAACR,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEO,EAAE,EAAE;IAChD,IAAIN,CAAC,GAAGR,GAAG,CAACA,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEP,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAER,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEd,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAER,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAET,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEJ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,IAAI,CAAC,CAACK,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzY,IAAIL,CAAC,GAAGT,GAAG,CAACA,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEP,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAET,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEd,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEJ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,IAAI,CAAC,CAACK,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzY,IAAIG,CAAC,GAAGP,GAAG,CAACK,CAAC,EAAEC,CAAC,CAAC;IACjB,OAAOC,CAAC,CAACA,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC;EACxB,CAAC;AACH;AAEA,SAASI,aAAaA,CAACf,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAE;EAC5C,OAAO,SAASa,iBAAiBA,CAACX,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEO,EAAE,EAAEG,EAAE,EAAE;IACpD,IAAIT,CAAC,GAAGR,GAAG,CAACA,GAAG,CAACA,GAAG,CAACE,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEP,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEP,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEU,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEV,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEZ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEP,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEX,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACE,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAER,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEW,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEX,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEZ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAER,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACV,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEU,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEV,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEW,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEX,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEd,GAAG,CAACE,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEP,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAER,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEjB,GAAG,CAACE,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAER,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEW,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEX,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEZ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAER,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEZ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEH,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAET,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEY,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEZ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACS,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEZ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAET,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEY,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACX,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACA,GAAG,CAACE,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEW,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEX,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEY,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEZ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEJ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,IAAI,CAAC,CAACK,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEY,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEH,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEd,GAAG,CAACE,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAER,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAET,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEJ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,IAAI,CAAC,CAACK,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEf,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEP,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAER,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAET,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEP,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAET,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACR,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACE,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAER,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAET,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEJ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,IAAI,CAAC,CAACK,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEP,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEJ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,IAAI,CAAC,CAACK,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/9E,IAAIL,CAAC,GAAGT,GAAG,CAACA,GAAG,CAACA,GAAG,CAACE,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEP,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEP,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEU,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEV,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEZ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEP,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEZ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEH,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAET,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEY,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEZ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACS,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEZ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAET,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEY,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACV,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEP,GAAG,CAACE,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEU,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEV,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEY,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEZ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEY,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEH,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEZ,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAEP,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEb,IAAI,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,EAAET,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAES,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEjB,GAAG,CAACA,GAAG,CAACE,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEU,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEV,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEW,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEX,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEZ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEH,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEU,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEV,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEY,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEZ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEY,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACX,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACE,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEW,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEX,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEY,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,CAAC,CAACgB,EAAE,CAAC,CAAC,CAAC,EAAEZ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEJ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,IAAI,CAAC,CAACK,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEY,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEV,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACF,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,GAAG,CAACE,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC,CAACM,EAAE,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEJ,KAAK,CAACF,GAAG,CAACC,IAAI,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEL,IAAI,CAAC,CAACK,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrpD,IAAIP,CAAC,GAAGP,GAAG,CAACK,CAAC,EAAEC,CAAC,CAAC;IACjB,OAAOC,CAAC,CAACA,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC;EACxB,CAAC;AACH;AAEA,SAASO,WAAWA,CAACT,CAAC,EAAE;EACtB,IAAIU,EAAE,GACJV,CAAC,KAAK,CAAC,GAAGV,aAAa,GACvBU,CAAC,KAAK,CAAC,GAAGG,aAAa,GAAGG,aAAa;EAEzC,OAAOI,EAAE,CAAC3B,SAAS,EAAEF,UAAU,EAAEG,WAAW,EAAEC,cAAc,CAAC;AAC/D;AAEA,IAAIU,iBAAiB,GAAGc,WAAW,CAAC,CAAC,CAAC;AACtC,IAAIL,iBAAiB,GAAGK,WAAW,CAAC,CAAC,CAAC;AAEtC,IAAIE,MAAM,GAAG,CACX,SAASC,YAAYA,CAAA,EAAG;EAAE,OAAO,CAAC;AAAC,CAAC,EACpC,SAASC,YAAYA,CAAA,EAAG;EAAE,OAAO,CAAC;AAAC,CAAC,EACpC,SAASC,YAAYA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC1B,OAAOA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,EACD,SAASE,YAAYA,CAACF,CAAC,EAAEC,CAAC,EAAEE,CAAC,EAAE;EAC7B,IAAIC,CAAC,GAAG,CAACJ,CAAC,CAAC,CAAC,CAAC,GAAGG,CAAC,CAAC,CAAC,CAAC,KAAKF,CAAC,CAAC,CAAC,CAAC,GAAGE,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,IAAIE,CAAC,GAAG,CAACL,CAAC,CAAC,CAAC,CAAC,GAAGG,CAAC,CAAC,CAAC,CAAC,KAAKF,CAAC,CAAC,CAAC,CAAC,GAAGE,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,IAAIG,GAAG,GAAGF,CAAC,GAAGC,CAAC;EACf,IAAIE,CAAC;EACL,IAAGH,CAAC,GAAG,CAAC,EAAE;IACR,IAAGC,CAAC,IAAI,CAAC,EAAE;MACT,OAAOC,GAAG;IACZ,CAAC,MAAM;MACLC,CAAC,GAAGH,CAAC,GAAGC,CAAC;IACX;EACF,CAAC,MAAM,IAAGD,CAAC,GAAG,CAAC,EAAE;IACf,IAAGC,CAAC,IAAI,CAAC,EAAE;MACT,OAAOC,GAAG;IACZ,CAAC,MAAM;MACLC,CAAC,GAAG,EAAEH,CAAC,GAAGC,CAAC,CAAC;IACd;EACF,CAAC,MAAM;IACL,OAAOC,GAAG;EACZ;EACA,IAAIE,GAAG,GAAGnC,SAAS,GAAGkC,CAAC;EACvB,IAAGD,GAAG,IAAIE,GAAG,IAAIF,GAAG,IAAI,CAACE,GAAG,EAAE;IAC5B,OAAOF,GAAG;EACZ;EACA,OAAO1B,iBAAiB,CAACoB,CAAC,EAAEC,CAAC,EAAEE,CAAC,CAAC;AACnC,CAAC,EACD,SAASM,YAAYA,CAACT,CAAC,EAACC,CAAC,EAACE,CAAC,EAACjB,CAAC,EAAE;EAC7B,IAAIwB,GAAG,GAAGV,CAAC,CAAC,CAAC,CAAC,GAAGd,CAAC,CAAC,CAAC,CAAC;EACrB,IAAIyB,GAAG,GAAGV,CAAC,CAAC,CAAC,CAAC,GAAGf,CAAC,CAAC,CAAC,CAAC;EACrB,IAAI0B,GAAG,GAAGT,CAAC,CAAC,CAAC,CAAC,GAAGjB,CAAC,CAAC,CAAC,CAAC;EACrB,IAAI2B,GAAG,GAAGb,CAAC,CAAC,CAAC,CAAC,GAAGd,CAAC,CAAC,CAAC,CAAC;EACrB,IAAI4B,GAAG,GAAGb,CAAC,CAAC,CAAC,CAAC,GAAGf,CAAC,CAAC,CAAC,CAAC;EACrB,IAAI6B,GAAG,GAAGZ,CAAC,CAAC,CAAC,CAAC,GAAGjB,CAAC,CAAC,CAAC,CAAC;EACrB,IAAI8B,GAAG,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGd,CAAC,CAAC,CAAC,CAAC;EACrB,IAAI+B,GAAG,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGf,CAAC,CAAC,CAAC,CAAC;EACrB,IAAIgC,GAAG,GAAGf,CAAC,CAAC,CAAC,CAAC,GAAGjB,CAAC,CAAC,CAAC,CAAC;EACrB,IAAIiC,MAAM,GAAGR,GAAG,GAAGI,GAAG;EACtB,IAAIK,MAAM,GAAGR,GAAG,GAAGE,GAAG;EACtB,IAAIO,MAAM,GAAGT,GAAG,GAAGC,GAAG;EACtB,IAAIS,MAAM,GAAGZ,GAAG,GAAGK,GAAG;EACtB,IAAIQ,MAAM,GAAGb,GAAG,GAAGI,GAAG;EACtB,IAAIU,MAAM,GAAGb,GAAG,GAAGE,GAAG;EACtB,IAAIP,GAAG,GAAGU,GAAG,IAAIG,MAAM,GAAGC,MAAM,CAAC,GACvBH,GAAG,IAAII,MAAM,GAAGC,MAAM,CAAC,GACvBJ,GAAG,IAAIK,MAAM,GAAGC,MAAM,CAAC;EACjC,IAAIC,SAAS,GAAG,CAACC,IAAI,CAACC,GAAG,CAACR,MAAM,CAAC,GAAGO,IAAI,CAACC,GAAG,CAACP,MAAM,CAAC,IAAIM,IAAI,CAACC,GAAG,CAACX,GAAG,CAAC,GACrD,CAACU,IAAI,CAACC,GAAG,CAACN,MAAM,CAAC,GAAGK,IAAI,CAACC,GAAG,CAACL,MAAM,CAAC,IAAII,IAAI,CAACC,GAAG,CAACV,GAAG,CAAC,GACrD,CAACS,IAAI,CAACC,GAAG,CAACJ,MAAM,CAAC,GAAGG,IAAI,CAACC,GAAG,CAACH,MAAM,CAAC,IAAIE,IAAI,CAACC,GAAG,CAACT,GAAG,CAAC;EACrE,IAAIV,GAAG,GAAGlC,SAAS,GAAGmD,SAAS;EAC/B,IAAKnB,GAAG,GAAGE,GAAG,IAAM,CAACF,GAAG,GAAGE,GAAI,EAAE;IAC/B,OAAOF,GAAG;EACZ;EACA,OAAOjB,iBAAiB,CAACW,CAAC,EAACC,CAAC,EAACE,CAAC,EAACjB,CAAC,CAAC;AACnC,CAAC,CACF;AAED,SAAS0C,UAAUA,CAACC,IAAI,EAAE;EACxB,IAAIC,IAAI,GAAGlC,MAAM,CAACiC,IAAI,CAAC1C,MAAM,CAAC;EAC9B,IAAG,CAAC2C,IAAI,EAAE;IACRA,IAAI,GAAGlC,MAAM,CAACiC,IAAI,CAAC1C,MAAM,CAAC,GAAGO,WAAW,CAACmC,IAAI,CAAC1C,MAAM,CAAC;EACvD;EACA,OAAO2C,IAAI,CAACC,KAAK,CAACC,SAAS,EAAEH,IAAI,CAAC;AACpC;AAEA,SAASC,IAAIA,CAAEG,IAAI,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;EAC3C,OAAO,SAASC,cAAcA,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACjD,QAAQC,SAAS,CAAC3D,MAAM;MACtB,KAAK,CAAC;MACN,KAAK,CAAC;QACJ,OAAO,CAAC;MACV,KAAK,CAAC;QACJ,OAAOiD,EAAE,CAACK,EAAE,EAAEC,EAAE,CAAC;MACnB,KAAK,CAAC;QACJ,OAAOL,EAAE,CAACI,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;MACvB,KAAK,CAAC;QACJ,OAAOL,EAAE,CAACG,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;MAC3B,KAAK,CAAC;QACJ,OAAOL,EAAE,CAACE,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;IACjC;IAEA,IAAItC,CAAC,GAAG,IAAIwC,KAAK,CAACD,SAAS,CAAC3D,MAAM,CAAC;IACnC,KAAK,IAAI6D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAAC3D,MAAM,EAAE,EAAE6D,CAAC,EAAE;MACzCzC,CAAC,CAACyC,CAAC,CAAC,GAAGF,SAAS,CAACE,CAAC,CAAC;IACrB;IACA,OAAOf,IAAI,CAAC1B,CAAC,CAAC;EAChB,CAAC;AACH;AAEA,SAAS0C,uBAAuBA,CAAA,EAAG;EACjC,OAAMrD,MAAM,CAACT,MAAM,IAAIhB,UAAU,EAAE;IACjCyB,MAAM,CAACsD,IAAI,CAACxD,WAAW,CAACE,MAAM,CAACT,MAAM,CAAC,CAAC;EACzC;EACAgE,MAAM,CAACC,OAAO,GAAGtB,IAAI,CAACC,KAAK,CAACC,SAAS,EAAE,CAACJ,UAAU,CAAC,CAACyB,MAAM,CAACzD,MAAM,CAAC,CAAC;EACnE,KAAI,IAAIoD,CAAC,GAAC,CAAC,EAAEA,CAAC,IAAE7E,UAAU,EAAE,EAAE6E,CAAC,EAAE;IAC/BG,MAAM,CAACC,OAAO,CAACJ,CAAC,CAAC,GAAGpD,MAAM,CAACoD,CAAC,CAAC;EAC/B;AACF;AAEAC,uBAAuB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}