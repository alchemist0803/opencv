{"ast":null,"code":"import Image from '../Image';\nimport getImageParameters from './getImageParameters';\n\n/**\n * Use this function to support getting the output image of an algorithm from user-supplied\n * options.\n * @private\n * @param {Image} thisImage - Original image on which the algorithm will be applied\n * @param {object} options - Options object received by the algorithm\n * @param {Image} [options.out] - If set, must be an image compatible with the algorithm\n * @param {object} newParameters - Parameters that will be combined with the ones from `thisImage`.\n * @param {object} internalOptions - Some additional options on the way to create the output image\n * @return {Image}\n */\nexport function getOutputImage(thisImage, options, newParameters, internalOptions = {}) {\n  const {\n    out\n  } = options;\n  if (out === undefined) {\n    if (internalOptions.copy) {\n      return thisImage.clone();\n    } else {\n      return Image.createFrom(thisImage, newParameters);\n    }\n  } else {\n    if (!Image.isImage(out)) {\n      throw new TypeError('out must be an Image object');\n    }\n    const requirements = Object.assign(getImageParameters(thisImage), newParameters);\n    for (const property in requirements) {\n      if (out[property] !== requirements[property]) {\n        throw new RangeError(`cannot use out. Its ${property} must be \"${requirements[property]}\" (found \"${out[property]}\")`);\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Same as getOutputImage but allows for an `inPlace` option.\n * @private\n * @param {Image} thisImage\n * @param {object} options\n * @param {boolean} [options.inPlace=false] - If true, thisImage is returned\n * @param {Image} [options.out]\n * @param {object} internalOptions - Additional internal options on how to create the output image\n * @param {boolean} [interalOptions.copy] - If true will copy the original image instead of creating a new empty image\n * @return {Image}\n */\nexport function getOutputImageOrInPlace(thisImage, options, internalOptions) {\n  if (options.inPlace !== undefined && typeof options.inPlace !== 'boolean') {\n    throw new TypeError('inPlace option must be a boolean');\n  }\n  if (options.inPlace) {\n    if (options.out !== undefined) {\n      throw new TypeError('out option must not be set if inPlace option is true');\n    }\n    return thisImage;\n  }\n  return getOutputImage(thisImage, options, null, internalOptions);\n}","map":{"version":3,"names":["Image","getImageParameters","getOutputImage","thisImage","options","newParameters","internalOptions","out","undefined","copy","clone","createFrom","isImage","TypeError","requirements","Object","assign","property","RangeError","getOutputImageOrInPlace","inPlace"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/image-js/src/image/internal/getOutputImage.js"],"sourcesContent":["import Image from '../Image';\n\nimport getImageParameters from './getImageParameters';\n\n/**\n * Use this function to support getting the output image of an algorithm from user-supplied\n * options.\n * @private\n * @param {Image} thisImage - Original image on which the algorithm will be applied\n * @param {object} options - Options object received by the algorithm\n * @param {Image} [options.out] - If set, must be an image compatible with the algorithm\n * @param {object} newParameters - Parameters that will be combined with the ones from `thisImage`.\n * @param {object} internalOptions - Some additional options on the way to create the output image\n * @return {Image}\n */\nexport function getOutputImage(\n  thisImage,\n  options,\n  newParameters,\n  internalOptions = {},\n) {\n  const { out } = options;\n  if (out === undefined) {\n    if (internalOptions.copy) {\n      return thisImage.clone();\n    } else {\n      return Image.createFrom(thisImage, newParameters);\n    }\n  } else {\n    if (!Image.isImage(out)) {\n      throw new TypeError('out must be an Image object');\n    }\n    const requirements = Object.assign(\n      getImageParameters(thisImage),\n      newParameters,\n    );\n    for (const property in requirements) {\n      if (out[property] !== requirements[property]) {\n        throw new RangeError(\n          `cannot use out. Its ${property} must be \"${requirements[property]}\" (found \"${out[property]}\")`,\n        );\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Same as getOutputImage but allows for an `inPlace` option.\n * @private\n * @param {Image} thisImage\n * @param {object} options\n * @param {boolean} [options.inPlace=false] - If true, thisImage is returned\n * @param {Image} [options.out]\n * @param {object} internalOptions - Additional internal options on how to create the output image\n * @param {boolean} [interalOptions.copy] - If true will copy the original image instead of creating a new empty image\n * @return {Image}\n */\nexport function getOutputImageOrInPlace(thisImage, options, internalOptions) {\n  if (options.inPlace !== undefined && typeof options.inPlace !== 'boolean') {\n    throw new TypeError('inPlace option must be a boolean');\n  }\n  if (options.inPlace) {\n    if (options.out !== undefined) {\n      throw new TypeError(\n        'out option must not be set if inPlace option is true',\n      );\n    }\n    return thisImage;\n  }\n  return getOutputImage(thisImage, options, null, internalOptions);\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,UAAU;AAE5B,OAAOC,kBAAkB,MAAM,sBAAsB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAC5BC,SAAS,EACTC,OAAO,EACPC,aAAa,EACbC,eAAe,GAAG,CAAC,CAAC,EACpB;EACA,MAAM;IAAEC;EAAI,CAAC,GAAGH,OAAO;EACvB,IAAIG,GAAG,KAAKC,SAAS,EAAE;IACrB,IAAIF,eAAe,CAACG,IAAI,EAAE;MACxB,OAAON,SAAS,CAACO,KAAK,CAAC,CAAC;IAC1B,CAAC,MAAM;MACL,OAAOV,KAAK,CAACW,UAAU,CAACR,SAAS,EAAEE,aAAa,CAAC;IACnD;EACF,CAAC,MAAM;IACL,IAAI,CAACL,KAAK,CAACY,OAAO,CAACL,GAAG,CAAC,EAAE;MACvB,MAAM,IAAIM,SAAS,CAAC,6BAA6B,CAAC;IACpD;IACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,MAAM,CAChCf,kBAAkB,CAACE,SAAS,CAAC,EAC7BE,aACF,CAAC;IACD,KAAK,MAAMY,QAAQ,IAAIH,YAAY,EAAE;MACnC,IAAIP,GAAG,CAACU,QAAQ,CAAC,KAAKH,YAAY,CAACG,QAAQ,CAAC,EAAE;QAC5C,MAAM,IAAIC,UAAU,CAClB,uBAAuBD,QAAQ,aAAaH,YAAY,CAACG,QAAQ,CAAC,aAAaV,GAAG,CAACU,QAAQ,CAAC,IAC9F,CAAC;MACH;IACF;IACA,OAAOV,GAAG;EACZ;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASY,uBAAuBA,CAAChB,SAAS,EAAEC,OAAO,EAAEE,eAAe,EAAE;EAC3E,IAAIF,OAAO,CAACgB,OAAO,KAAKZ,SAAS,IAAI,OAAOJ,OAAO,CAACgB,OAAO,KAAK,SAAS,EAAE;IACzE,MAAM,IAAIP,SAAS,CAAC,kCAAkC,CAAC;EACzD;EACA,IAAIT,OAAO,CAACgB,OAAO,EAAE;IACnB,IAAIhB,OAAO,CAACG,GAAG,KAAKC,SAAS,EAAE;MAC7B,MAAM,IAAIK,SAAS,CACjB,sDACF,CAAC;IACH;IACA,OAAOV,SAAS;EAClB;EACA,OAAOD,cAAc,CAACC,SAAS,EAAEC,OAAO,EAAE,IAAI,EAAEE,eAAe,CAAC;AAClE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}