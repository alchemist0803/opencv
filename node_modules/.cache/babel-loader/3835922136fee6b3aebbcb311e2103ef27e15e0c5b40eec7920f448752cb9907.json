{"ast":null,"code":"'use strict';\n\nvar workerTemplate = require('./workerTemplate');\nvar CORES = navigator.hardwareConcurrency || 1;\nvar noop = Function.prototype;\nfunction WorkerManager(func, options) {\n  // Check arguments\n  if (typeof func !== 'string' && typeof func !== 'function') throw new TypeError('func argument must be a function');\n  if (options === undefined) options = {};\n  if (typeof options !== 'object' || options === null) throw new TypeError('options argument must be an object');\n  this._workerCode = func.toString();\n\n  // Parse options\n  if (options.maxWorkers === undefined || options.maxWorkers === 'auto') {\n    this._numWorkers = Math.min(CORES - 1, 1);\n  } else if (options.maxWorkers > 0) {\n    this._numWorkers = Math.min(options.maxWorkers, CORES);\n  } else {\n    this._numWorkers = CORES;\n  }\n  this._workers = new Map();\n  this._timeout = options.timeout || 0;\n  this._terminateOnError = !!options.terminateOnError;\n  var deps = options.deps;\n  if (typeof deps === 'string') deps = [deps];\n  if (!Array.isArray(deps)) deps = undefined;\n  this._id = 0;\n  this._terminated = false;\n  this._working = 0;\n  this._waiting = [];\n  this._init(deps);\n}\nWorkerManager.prototype._init = function (deps) {\n  var workerURL = workerTemplate.newWorkerURL(this._workerCode, deps);\n  for (var i = 0; i < this._numWorkers; i++) {\n    var worker = new Worker(workerURL);\n    worker.onmessage = this._onmessage.bind(this, worker);\n    worker.onerror = this._onerror.bind(this, worker);\n    worker.running = false;\n    worker.id = i;\n    this._workers.set(worker, null);\n  }\n  URL.revokeObjectURL(workerURL);\n};\nWorkerManager.prototype._onerror = function (worker, error) {\n  if (this._terminated) return;\n  this._working--;\n  worker.running = false;\n  var callback = this._workers.get(worker);\n  if (callback) {\n    callback[1](error.message);\n  }\n  this._workers.set(worker, null);\n  if (this._terminateOnError) {\n    this.terminate();\n  } else {\n    this._exec();\n  }\n};\nWorkerManager.prototype._onmessage = function (worker, event) {\n  if (this._terminated) return;\n  this._working--;\n  worker.running = false;\n  var callback = this._workers.get(worker);\n  if (callback) {\n    callback[0](event.data.data);\n  }\n  this._workers.set(worker, null);\n  this._exec();\n};\nWorkerManager.prototype._exec = function () {\n  for (var worker of this._workers.keys()) {\n    if (this._working === this._numWorkers || this._waiting.length === 0) {\n      return;\n    }\n    if (!worker.running) {\n      for (var i = 0; i < this._waiting.length; i++) {\n        var execInfo = this._waiting[i];\n        if (typeof execInfo[4] === 'number' && execInfo[4] !== worker.id) {\n          // this message is intended to another worker, let's ignore it\n          continue;\n        }\n        this._waiting.splice(i, 1);\n        worker.postMessage({\n          action: 'exec',\n          event: execInfo[0],\n          args: execInfo[1]\n        }, execInfo[2]);\n        worker.running = true;\n        worker.time = Date.now();\n        this._workers.set(worker, execInfo[3]);\n        this._working++;\n        break;\n      }\n    }\n  }\n};\nWorkerManager.prototype.terminate = function () {\n  if (this._terminated) return;\n  for (var entry of this._workers) {\n    entry[0].terminate();\n    if (entry[1]) {\n      entry[1][1](new Error('Terminated'));\n    }\n  }\n  this._workers.clear();\n  this._waiting = [];\n  this._working = 0;\n  this._terminated = true;\n};\nWorkerManager.prototype.postAll = function (event, args) {\n  if (this._terminated) throw new Error('Cannot post (terminated)');\n  var promises = [];\n  for (var worker of this._workers.keys()) {\n    promises.push(this.post(event, args, [], worker.id));\n  }\n  return Promise.all(promises);\n};\nWorkerManager.prototype.post = function (event, args, transferable, id) {\n  if (args === undefined) args = [];\n  if (transferable === undefined) transferable = [];\n  if (!Array.isArray(args)) {\n    args = [args];\n  }\n  if (!Array.isArray(transferable)) {\n    transferable = [transferable];\n  }\n  var self = this;\n  return new Promise(function (resolve, reject) {\n    if (self._terminated) throw new Error('Cannot post (terminated)');\n    self._waiting.push([event, args, transferable, [resolve, reject], id]);\n    self._exec();\n  });\n};\nmodule.exports = WorkerManager;","map":{"version":3,"names":["workerTemplate","require","CORES","navigator","hardwareConcurrency","noop","Function","prototype","WorkerManager","func","options","TypeError","undefined","_workerCode","toString","maxWorkers","_numWorkers","Math","min","_workers","Map","_timeout","timeout","_terminateOnError","terminateOnError","deps","Array","isArray","_id","_terminated","_working","_waiting","_init","workerURL","newWorkerURL","i","worker","Worker","onmessage","_onmessage","bind","onerror","_onerror","running","id","set","URL","revokeObjectURL","error","callback","get","message","terminate","_exec","event","data","keys","length","execInfo","splice","postMessage","action","args","time","Date","now","entry","Error","clear","postAll","promises","push","post","Promise","all","transferable","self","resolve","reject","module","exports"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/web-worker-manager/src/index.js"],"sourcesContent":["'use strict';\n\nvar workerTemplate = require('./workerTemplate');\n\nvar CORES = navigator.hardwareConcurrency || 1;\n\nvar noop = Function.prototype;\n\nfunction WorkerManager(func, options) {\n    // Check arguments\n    if (typeof func !== 'string' && typeof func !== 'function')\n        throw new TypeError('func argument must be a function');\n    if (options === undefined)\n        options = {};\n    if (typeof options !== 'object' || options === null)\n        throw new TypeError('options argument must be an object');\n\n    this._workerCode = func.toString();\n\n    // Parse options\n    if (options.maxWorkers === undefined || options.maxWorkers === 'auto') {\n        this._numWorkers = Math.min(CORES - 1, 1);\n    } else if (options.maxWorkers > 0) {\n        this._numWorkers = Math.min(options.maxWorkers, CORES);\n    } else {\n        this._numWorkers = CORES;\n    }\n\n    this._workers = new Map();\n    this._timeout = options.timeout || 0;\n    this._terminateOnError = !!options.terminateOnError;\n\n    var deps = options.deps;\n    if (typeof deps === 'string')\n        deps = [deps];\n    if (!Array.isArray(deps))\n        deps = undefined;\n\n    this._id = 0;\n    this._terminated = false;\n    this._working = 0;\n    this._waiting = [];\n\n    this._init(deps);\n}\n\nWorkerManager.prototype._init = function (deps) {\n    var workerURL = workerTemplate.newWorkerURL(this._workerCode, deps);\n\n    for (var i = 0; i < this._numWorkers; i++) {\n        var worker = new Worker(workerURL);\n        worker.onmessage = this._onmessage.bind(this, worker);\n        worker.onerror = this._onerror.bind(this, worker);\n        worker.running = false;\n        worker.id = i;\n        this._workers.set(worker, null);\n    }\n\n    URL.revokeObjectURL(workerURL);\n};\n\nWorkerManager.prototype._onerror = function (worker, error) {\n    if (this._terminated)\n        return;\n    this._working--;\n    worker.running = false;\n    var callback = this._workers.get(worker);\n    if (callback) {\n        callback[1](error.message);\n    }\n    this._workers.set(worker, null);\n    if (this._terminateOnError) {\n        this.terminate();\n    } else {\n        this._exec();\n    }\n};\n\nWorkerManager.prototype._onmessage = function (worker, event) {\n    if (this._terminated)\n        return;\n    this._working--;\n    worker.running = false;\n    var callback = this._workers.get(worker);\n    if (callback) {\n        callback[0](event.data.data);\n    }\n    this._workers.set(worker, null);\n    this._exec();\n};\n\nWorkerManager.prototype._exec = function () {\n    for (var worker of this._workers.keys()) {\n        if (this._working === this._numWorkers ||\n            this._waiting.length === 0) {\n            return;\n        }\n        if (!worker.running) {\n            for (var i = 0; i < this._waiting.length; i++) {\n                var execInfo = this._waiting[i];\n                if (typeof execInfo[4] === 'number' && execInfo[4] !== worker.id) {\n                    // this message is intended to another worker, let's ignore it\n                    continue;\n                }\n                this._waiting.splice(i, 1);\n                worker.postMessage({\n                    action: 'exec',\n                    event: execInfo[0],\n                    args: execInfo[1]\n                }, execInfo[2]);\n                worker.running = true;\n                worker.time = Date.now();\n                this._workers.set(worker, execInfo[3]);\n                this._working++;\n                break;\n            }\n        }\n    }\n};\n\nWorkerManager.prototype.terminate = function () {\n    if (this._terminated) return;\n    for (var entry of this._workers) {\n        entry[0].terminate();\n        if (entry[1]) {\n            entry[1][1](new Error('Terminated'));\n        }\n    }\n    this._workers.clear();\n    this._waiting = [];\n    this._working = 0;\n    this._terminated = true;\n};\n\nWorkerManager.prototype.postAll = function (event, args) {\n    if (this._terminated)\n        throw new Error('Cannot post (terminated)');\n    var promises = [];\n    for (var worker of this._workers.keys()) {\n        promises.push(this.post(event, args, [], worker.id));\n    }\n    return Promise.all(promises);\n};\n\nWorkerManager.prototype.post = function (event, args, transferable, id) {\n    if (args === undefined) args = [];\n    if (transferable === undefined) transferable = [];\n    if (!Array.isArray(args)) {\n        args = [args];\n    }\n    if (!Array.isArray(transferable)) {\n        transferable = [transferable];\n    }\n\n    var self = this;\n    return new Promise(function (resolve, reject) {\n        if (self._terminated) throw new Error('Cannot post (terminated)');\n        self._waiting.push([event, args, transferable, [resolve, reject], id]);\n        self._exec();\n    });\n};\n\nmodule.exports = WorkerManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}