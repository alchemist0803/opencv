{"ast":null,"code":"/**\n * Computes the convex hull of a binary image using Andrew's Monotone Chain Algorithm\n * http://www.algorithmist.com/index.php/Monotone_Chain_Convex_Hull\n *\n * @param points - An array of points.\n * @param options - MCCH Algorithm options.\n * @return Coordinates of the convex hull in clockwise order\n */\nexport default function monotoneChainConvexHull(points, options = {}) {\n  const {\n    sorted\n  } = options;\n  if (!sorted) {\n    points = points.slice().sort(byXThenY);\n  }\n  const n = points.length;\n  const result = new Array(n * 2);\n  let k = 0;\n  for (let i = 0; i < n; i++) {\n    const point = points[i];\n    while (k >= 2 && cw(result[k - 2], result[k - 1], point) <= 0) {\n      k--;\n    }\n    result[k++] = point;\n  }\n  const t = k + 1;\n  for (let i = n - 2; i >= 0; i--) {\n    const point = points[i];\n    while (k >= t && cw(result[k - 2], result[k - 1], point) <= 0) {\n      k--;\n    }\n    result[k++] = point;\n  }\n  return result.slice(0, k - 1);\n}\nfunction cw(p1, p2, p3) {\n  return (p2[1] - p1[1]) * (p3[0] - p1[0]) - (p2[0] - p1[0]) * (p3[1] - p1[1]);\n}\nfunction byXThenY(point1, point2) {\n  if (point1[0] === point2[0]) {\n    return point1[1] - point2[1];\n  }\n  return point1[0] - point2[0];\n}","map":{"version":3,"names":["monotoneChainConvexHull","points","options","sorted","slice","sort","byXThenY","n","length","result","Array","k","i","point","cw","t","p1","p2","p3","point1","point2"],"sources":["C:\\Users\\Admin\\Documents\\Workspace\\opencv\\opencv\\node_modules\\monotone-chain-convex-hull\\src\\index.ts"],"sourcesContent":["interface MCCHOptions {\n  sorted?: boolean;\n}\ntype Point = [number, number];\n/**\n * Computes the convex hull of a binary image using Andrew's Monotone Chain Algorithm\n * http://www.algorithmist.com/index.php/Monotone_Chain_Convex_Hull\n *\n * @param points - An array of points.\n * @param options - MCCH Algorithm options.\n * @return Coordinates of the convex hull in clockwise order\n */\nexport default function monotoneChainConvexHull(\n  points: Point[],\n  options: MCCHOptions = {},\n): Point[] {\n  const { sorted } = options;\n  if (!sorted) {\n    points = points.slice().sort(byXThenY);\n  }\n\n  const n = points.length;\n  const result = new Array(n * 2);\n  let k = 0;\n\n  for (let i = 0; i < n; i++) {\n    const point = points[i];\n    while (k >= 2 && cw(result[k - 2], result[k - 1], point) <= 0) {\n      k--;\n    }\n    result[k++] = point;\n  }\n\n  const t = k + 1;\n  for (let i = n - 2; i >= 0; i--) {\n    const point = points[i];\n    while (k >= t && cw(result[k - 2], result[k - 1], point) <= 0) {\n      k--;\n    }\n    result[k++] = point;\n  }\n\n  return result.slice(0, k - 1);\n}\n\nfunction cw(p1: Point, p2: Point, p3: Point) {\n  return (p2[1] - p1[1]) * (p3[0] - p1[0]) - (p2[0] - p1[0]) * (p3[1] - p1[1]);\n}\n\nfunction byXThenY(point1: Point, point2: Point) {\n  if (point1[0] === point2[0]) {\n    return point1[1] - point2[1];\n  }\n  return point1[0] - point2[0];\n}\n"],"mappings":"AAIA;;;;;;;;AAQA,eAAc,SAAUA,uBAAuBA,CAC7CC,MAAe,EACfC,OAAA,GAAuB,EAAE;EAEzB,MAAM;IAAEC;EAAM,CAAE,GAAGD,OAAO;EAC1B,IAAI,CAACC,MAAM,EAAE;IACXF,MAAM,GAAGA,MAAM,CAACG,KAAK,EAAE,CAACC,IAAI,CAACC,QAAQ,CAAC;;EAGxC,MAAMC,CAAC,GAAGN,MAAM,CAACO,MAAM;EACvB,MAAMC,MAAM,GAAG,IAAIC,KAAK,CAACH,CAAC,GAAG,CAAC,CAAC;EAC/B,IAAII,CAAC,GAAG,CAAC;EAET,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,CAAC,EAAEK,CAAC,EAAE,EAAE;IAC1B,MAAMC,KAAK,GAAGZ,MAAM,CAACW,CAAC,CAAC;IACvB,OAAOD,CAAC,IAAI,CAAC,IAAIG,EAAE,CAACL,MAAM,CAACE,CAAC,GAAG,CAAC,CAAC,EAAEF,MAAM,CAACE,CAAC,GAAG,CAAC,CAAC,EAAEE,KAAK,CAAC,IAAI,CAAC,EAAE;MAC7DF,CAAC,EAAE;;IAELF,MAAM,CAACE,CAAC,EAAE,CAAC,GAAGE,KAAK;;EAGrB,MAAME,CAAC,GAAGJ,CAAC,GAAG,CAAC;EACf,KAAK,IAAIC,CAAC,GAAGL,CAAC,GAAG,CAAC,EAAEK,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC/B,MAAMC,KAAK,GAAGZ,MAAM,CAACW,CAAC,CAAC;IACvB,OAAOD,CAAC,IAAII,CAAC,IAAID,EAAE,CAACL,MAAM,CAACE,CAAC,GAAG,CAAC,CAAC,EAAEF,MAAM,CAACE,CAAC,GAAG,CAAC,CAAC,EAAEE,KAAK,CAAC,IAAI,CAAC,EAAE;MAC7DF,CAAC,EAAE;;IAELF,MAAM,CAACE,CAAC,EAAE,CAAC,GAAGE,KAAK;;EAGrB,OAAOJ,MAAM,CAACL,KAAK,CAAC,CAAC,EAAEO,CAAC,GAAG,CAAC,CAAC;AAC/B;AAEA,SAASG,EAAEA,CAACE,EAAS,EAAEC,EAAS,EAAEC,EAAS;EACzC,OAAO,CAACD,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,KAAKE,EAAE,CAAC,CAAC,CAAC,GAAGF,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAACC,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,KAAKE,EAAE,CAAC,CAAC,CAAC,GAAGF,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9E;AAEA,SAASV,QAAQA,CAACa,MAAa,EAAEC,MAAa;EAC5C,IAAID,MAAM,CAAC,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,CAAC,EAAE;IAC3B,OAAOD,MAAM,CAAC,CAAC,CAAC,GAAGC,MAAM,CAAC,CAAC,CAAC;;EAE9B,OAAOD,MAAM,CAAC,CAAC,CAAC,GAAGC,MAAM,CAAC,CAAC,CAAC;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}