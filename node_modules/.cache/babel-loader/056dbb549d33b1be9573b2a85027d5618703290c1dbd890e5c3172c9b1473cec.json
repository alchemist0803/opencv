{"ast":null,"code":"import Image from '../../../image/Image';\nconst defaultOptions = {\n  regression: {\n    kernelType: 'polynomial',\n    kernelOptions: {\n      degree: 2,\n      constant: 1\n    }\n  },\n  threshold: 0.02,\n  roi: {\n    minSurface: 100,\n    positive: false\n  },\n  sampling: 20,\n  include: []\n};\nfunction run(image, options, onStep) {\n  options = Object.assign({}, defaultOptions, options);\n  const manager = this.manager;\n  if (Array.isArray(image)) {\n    return Promise.all(image.map(function (img) {\n      const run = runOnce(manager, img, options);\n      if (typeof onStep === 'function') {\n        run.then(onStep);\n      }\n      return run;\n    }));\n  } else {\n    return runOnce(manager, image, options);\n  }\n}\nfunction runOnce(manager, image, options) {\n  return manager.post('data', [image, options]).then(function (response) {\n    for (let i in response) {\n      response[i] = new Image(response[i]);\n    }\n    return response;\n  });\n}\nfunction work() {\n  worker.on('data', function (send, image, options) {\n    image = new IJS(image);\n    const result = {};\n    const toTransfer = [];\n    const grey = image.grey();\n    const sobel = grey.sobelFilter();\n    maybeInclude('sobel', sobel);\n    const mask = sobel.level().mask({\n      threshold: options.threshold\n    });\n    maybeInclude('mask', mask);\n    const roiManager = sobel.getRoiManager();\n    roiManager.fromMask(mask);\n    const realMask = roiManager.getMask(options.roi);\n    maybeInclude('realMask', realMask);\n    const pixels = grey.getPixelsGrid({\n      sampling: options.sampling,\n      mask: realMask\n    });\n    const background = image.getBackground(pixels.xyS, pixels.zS, options.regression);\n    maybeInclude('background', background);\n    const corrected = image.subtract(background);\n    result.result = corrected;\n    toTransfer.push(corrected.data.buffer);\n    send(result, toTransfer);\n    function maybeInclude(name, image) {\n      if (options.include.includes(name)) {\n        result[name] = image;\n        toTransfer.push(image.data.buffer);\n      }\n    }\n  });\n}\nconst background = {\n  run,\n  work\n};\nexport default background;","map":{"version":3,"names":["Image","defaultOptions","regression","kernelType","kernelOptions","degree","constant","threshold","roi","minSurface","positive","sampling","include","run","image","options","onStep","Object","assign","manager","Array","isArray","Promise","all","map","img","runOnce","then","post","response","i","work","worker","on","send","IJS","result","toTransfer","grey","sobel","sobelFilter","maybeInclude","mask","level","roiManager","getRoiManager","fromMask","realMask","getMask","pixels","getPixelsGrid","background","getBackground","xyS","zS","corrected","subtract","push","data","buffer","name","includes"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/image-js/src/browser/worker/process/background.js"],"sourcesContent":["import Image from '../../../image/Image';\n\nconst defaultOptions = {\n  regression: {\n    kernelType: 'polynomial',\n    kernelOptions: { degree: 2, constant: 1 },\n  },\n  threshold: 0.02,\n  roi: {\n    minSurface: 100,\n    positive: false,\n  },\n  sampling: 20,\n  include: [],\n};\n\nfunction run(image, options, onStep) {\n  options = Object.assign({}, defaultOptions, options);\n  const manager = this.manager;\n  if (Array.isArray(image)) {\n    return Promise.all(\n      image.map(function (img) {\n        const run = runOnce(manager, img, options);\n        if (typeof onStep === 'function') {\n          run.then(onStep);\n        }\n        return run;\n      }),\n    );\n  } else {\n    return runOnce(manager, image, options);\n  }\n}\n\nfunction runOnce(manager, image, options) {\n  return manager.post('data', [image, options]).then(function (response) {\n    for (let i in response) {\n      response[i] = new Image(response[i]);\n    }\n    return response;\n  });\n}\n\nfunction work() {\n  worker.on('data', function (send, image, options) {\n    image = new IJS(image);\n    const result = {};\n    const toTransfer = [];\n\n    const grey = image.grey();\n\n    const sobel = grey.sobelFilter();\n    maybeInclude('sobel', sobel);\n\n    const mask = sobel.level().mask({ threshold: options.threshold });\n    maybeInclude('mask', mask);\n\n    const roiManager = sobel.getRoiManager();\n    roiManager.fromMask(mask);\n    const realMask = roiManager.getMask(options.roi);\n    maybeInclude('realMask', realMask);\n\n    const pixels = grey.getPixelsGrid({\n      sampling: options.sampling,\n      mask: realMask,\n    });\n\n    const background = image.getBackground(\n      pixels.xyS,\n      pixels.zS,\n      options.regression,\n    );\n    maybeInclude('background', background);\n\n    const corrected = image.subtract(background);\n\n    result.result = corrected;\n    toTransfer.push(corrected.data.buffer);\n    send(result, toTransfer);\n\n    function maybeInclude(name, image) {\n      if (options.include.includes(name)) {\n        result[name] = image;\n        toTransfer.push(image.data.buffer);\n      }\n    }\n  });\n}\n\nconst background = { run, work };\nexport default background;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}