{"ast":null,"code":"import { Matrix } from 'ml-matrix';\n\n/**\n * We set the data of the image from a matrix. The size of the matrix and the data have to be the same.\n * @memberof Image\n * @instance\n * @param {Matrix} matrix\n * @param {object} [options]\n * @param {number} [options.channel]\n *\n * @return {this}\n */\nexport default function setMatrix(matrix, options = {}) {\n  matrix = new Matrix(matrix);\n  let {\n    channel\n  } = options;\n  this.checkProcessable('getMatrix', {\n    bitDepth: [8, 16]\n  });\n  if (channel === undefined) {\n    if (this.components > 1) {\n      throw new RangeError('You need to define the channel for an image that contains more than one channel');\n    }\n    channel = 0;\n  }\n  if (this.width !== matrix.columns || this.height !== matrix.rows) {\n    throw new RangeError('The size of the matrix must be equal to the size of the image');\n  }\n  for (let x = 0; x < this.height; x++) {\n    for (let y = 0; y < this.width; y++) {\n      this.setValueXY(y, x, channel, matrix.get(x, y));\n    }\n  }\n  return this;\n}","map":{"version":3,"names":["Matrix","setMatrix","matrix","options","channel","checkProcessable","bitDepth","undefined","components","RangeError","width","columns","height","rows","x","y","setValueXY","get"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/image-js/src/image/utility/setMatrix.js"],"sourcesContent":["import { Matrix } from 'ml-matrix';\n\n/**\n * We set the data of the image from a matrix. The size of the matrix and the data have to be the same.\n * @memberof Image\n * @instance\n * @param {Matrix} matrix\n * @param {object} [options]\n * @param {number} [options.channel]\n *\n * @return {this}\n */\nexport default function setMatrix(matrix, options = {}) {\n  matrix = new Matrix(matrix);\n  let { channel } = options;\n  this.checkProcessable('getMatrix', {\n    bitDepth: [8, 16],\n  });\n\n  if (channel === undefined) {\n    if (this.components > 1) {\n      throw new RangeError(\n        'You need to define the channel for an image that contains more than one channel',\n      );\n    }\n    channel = 0;\n  }\n\n  if (this.width !== matrix.columns || this.height !== matrix.rows) {\n    throw new RangeError(\n      'The size of the matrix must be equal to the size of the image',\n    );\n  }\n\n  for (let x = 0; x < this.height; x++) {\n    for (let y = 0; y < this.width; y++) {\n      this.setValueXY(y, x, channel, matrix.get(x, y));\n    }\n  }\n\n  return this;\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,WAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,SAASA,CAACC,MAAM,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACtDD,MAAM,GAAG,IAAIF,MAAM,CAACE,MAAM,CAAC;EAC3B,IAAI;IAAEE;EAAQ,CAAC,GAAGD,OAAO;EACzB,IAAI,CAACE,gBAAgB,CAAC,WAAW,EAAE;IACjCC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;EAClB,CAAC,CAAC;EAEF,IAAIF,OAAO,KAAKG,SAAS,EAAE;IACzB,IAAI,IAAI,CAACC,UAAU,GAAG,CAAC,EAAE;MACvB,MAAM,IAAIC,UAAU,CAClB,iFACF,CAAC;IACH;IACAL,OAAO,GAAG,CAAC;EACb;EAEA,IAAI,IAAI,CAACM,KAAK,KAAKR,MAAM,CAACS,OAAO,IAAI,IAAI,CAACC,MAAM,KAAKV,MAAM,CAACW,IAAI,EAAE;IAChE,MAAM,IAAIJ,UAAU,CAClB,+DACF,CAAC;EACH;EAEA,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACF,MAAM,EAAEE,CAAC,EAAE,EAAE;IACpC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACL,KAAK,EAAEK,CAAC,EAAE,EAAE;MACnC,IAAI,CAACC,UAAU,CAACD,CAAC,EAAED,CAAC,EAAEV,OAAO,EAAEF,MAAM,CAACe,GAAG,CAACH,CAAC,EAAEC,CAAC,CAAC,CAAC;IAClD;EACF;EAEA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}