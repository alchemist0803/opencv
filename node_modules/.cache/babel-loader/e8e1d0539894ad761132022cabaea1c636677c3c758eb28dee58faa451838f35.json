{"ast":null,"code":"import { KernelRidgeRegression } from 'ml-regression';\nimport Image from '../Image';\n\n/**\n * @memberof Image\n * @instance\n * @param {Array<Array<number>>} coordinates\n * @param {Array<Array<number>>} values;\n * @param {object} [options]\n * @return {Image}\n */\nexport default function background(coordinates, values, options) {\n  const model = new KernelRidgeRegression(coordinates, values, options);\n  const allCoordinates = new Array(this.size);\n  for (let i = 0; i < this.width; i++) {\n    for (let j = 0; j < this.height; j++) {\n      allCoordinates[j * this.width + i] = [i, j];\n    }\n  }\n  const result = model.predict(allCoordinates);\n  const background = Image.createFrom(this);\n  for (let i = 0; i < this.size; i++) {\n    background.data[i] = Math.min(this.maxValue, Math.max(0, result[i][0]));\n  }\n  return background;\n}","map":{"version":3,"names":["KernelRidgeRegression","Image","background","coordinates","values","options","model","allCoordinates","Array","size","i","width","j","height","result","predict","createFrom","data","Math","min","maxValue","max"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/image-js/src/image/filter/background.js"],"sourcesContent":["import { KernelRidgeRegression } from 'ml-regression';\n\nimport Image from '../Image';\n\n/**\n * @memberof Image\n * @instance\n * @param {Array<Array<number>>} coordinates\n * @param {Array<Array<number>>} values;\n * @param {object} [options]\n * @return {Image}\n */\nexport default function background(coordinates, values, options) {\n  const model = new KernelRidgeRegression(coordinates, values, options);\n  const allCoordinates = new Array(this.size);\n  for (let i = 0; i < this.width; i++) {\n    for (let j = 0; j < this.height; j++) {\n      allCoordinates[j * this.width + i] = [i, j];\n    }\n  }\n  const result = model.predict(allCoordinates);\n  const background = Image.createFrom(this);\n  for (let i = 0; i < this.size; i++) {\n    background.data[i] = Math.min(this.maxValue, Math.max(0, result[i][0]));\n  }\n  return background;\n}\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,eAAe;AAErD,OAAOC,KAAK,MAAM,UAAU;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,UAAUA,CAACC,WAAW,EAAEC,MAAM,EAAEC,OAAO,EAAE;EAC/D,MAAMC,KAAK,GAAG,IAAIN,qBAAqB,CAACG,WAAW,EAAEC,MAAM,EAAEC,OAAO,CAAC;EACrE,MAAME,cAAc,GAAG,IAAIC,KAAK,CAAC,IAAI,CAACC,IAAI,CAAC;EAC3C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACC,KAAK,EAAED,CAAC,EAAE,EAAE;IACnC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACC,MAAM,EAAED,CAAC,EAAE,EAAE;MACpCL,cAAc,CAACK,CAAC,GAAG,IAAI,CAACD,KAAK,GAAGD,CAAC,CAAC,GAAG,CAACA,CAAC,EAAEE,CAAC,CAAC;IAC7C;EACF;EACA,MAAME,MAAM,GAAGR,KAAK,CAACS,OAAO,CAACR,cAAc,CAAC;EAC5C,MAAML,UAAU,GAAGD,KAAK,CAACe,UAAU,CAAC,IAAI,CAAC;EACzC,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,IAAI,EAAEC,CAAC,EAAE,EAAE;IAClCR,UAAU,CAACe,IAAI,CAACP,CAAC,CAAC,GAAGQ,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,EAAEF,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEP,MAAM,CAACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzE;EACA,OAAOR,UAAU;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}