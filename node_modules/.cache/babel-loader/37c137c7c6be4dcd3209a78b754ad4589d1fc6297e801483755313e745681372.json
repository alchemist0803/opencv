{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Workspace\\\\opencv\\\\opencv\\\\src\\\\calculators\\\\TiltAngleCalculatorFromImg.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Image } from 'image-js';\nimport uploadImg from '../assets/imgs/upload.png';\nimport background from '../assets/imgs/background.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TiltAngleCalculatorFromImg = () => {\n  _s();\n  const [image1, setImage1] = useState(null);\n  const [image2, setImage2] = useState(null);\n  const [angle1, setAngle1] = useState(null);\n  const [angle2, setAngle2] = useState(null);\n  const [tiltAngle, setTiltAngle] = useState(null);\n  const leftImgRef = useRef(null);\n  const rightImgRef = useRef(null);\n  useEffect(() => {\n    if (image1) {\n      processImage(image1, setAngle1);\n    }\n    if (image2) {\n      processImage(image2, setAngle2);\n    }\n  }, [image1, image2]);\n  useEffect(() => {\n    calculateTilt();\n  }, [angle1, angle2]);\n  const handleLeftClick = () => {\n    if (leftImgRef.current) {\n      leftImgRef.current.click();\n    }\n  };\n  const handleRightClick = () => {\n    if (rightImgRef.current) {\n      rightImgRef.current.click();\n    }\n  };\n  // Handle Image Upload\n  const handleImageUpload = (e, setImage) => {\n    const file = e.target.files[0];\n    if (file) {\n      setImage(URL.createObjectURL(file));\n    }\n  };\n\n  // Process Image with image-js\n  const processImage = async (imageSrc, setAngle) => {\n    const img = await Image.load(imageSrc);\n    const gray = img.grey();\n    const edges = gray.sobelFilter(); // Edge detection\n\n    // Get all edge pixels\n    let edgePoints = [];\n    for (let y = 0; y < edges.height; y++) {\n      for (let x = 0; x < edges.width; x++) {\n        if (edges.getPixelXY(x, y)[0] > 0) {\n          // Check if pixel is part of an edge\n          edgePoints.push([x, y]);\n        }\n      }\n    }\n    if (edgePoints.length < 2) {\n      console.error(\"Not enough edge points detected.\");\n      return;\n    }\n\n    // Perform PCA (Principal Component Analysis)\n    const meanX = edgePoints.reduce((sum, p) => sum + p[0], 0) / edgePoints.length;\n    const meanY = edgePoints.reduce((sum, p) => sum + p[1], 0) / edgePoints.length;\n    let covXX = 0,\n      covYY = 0,\n      covXY = 0;\n    for (const [x, y] of edgePoints) {\n      const dx = x - meanX;\n      const dy = y - meanY;\n      covXX += dx * dx;\n      covYY += dy * dy;\n      covXY += dx * dy;\n    }\n\n    // Compute orientation\n    const angleRad = 0.5 * Math.atan2(2 * covXY, covXX - covYY);\n    let angleDeg = angleRad * (180 / Math.PI);\n\n    // Convert to \"vertical-based\" angle (90° should be 0°, right tilt = +, left tilt = -)\n    if (angleDeg > 0) {\n      angleDeg = 90 - angleDeg;\n    } else {\n      angleDeg = 90 + angleDeg;\n    }\n    console.log(`Detected angle: ${angleDeg.toFixed(2)}°`);\n    setAngle(angleDeg);\n  };\n\n  // Calculate Tilt Angle Between Two Images\n  const calculateTilt = () => {\n    if (angle1 !== null && angle2 !== null) {\n      const xRad = angle1 * Math.PI / 180;\n      const yRad = angle2 * Math.PI / 180;\n\n      // Compute tan^2(x) + tan^2(y)\n      const tanSquaredSum = Math.pow(Math.tan(xRad), 2) + Math.pow(Math.tan(yRad), 2);\n\n      // Compute z in radians\n      const zRad = Math.atan(Math.sqrt(tanSquaredSum));\n\n      // Convert back to degrees\n      const zDeg = zRad * 180 / Math.PI;\n      setTiltAngle(zDeg);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: background,\n      width: \"100%\",\n      alt: \"BG\",\n      style: {\n        position: 'absolute',\n        inset: '0',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        zIndex: '1',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tilt Angle Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          marginTop: '30px',\n          justifyContent: 'center',\n          alignItems: 'cneter',\n          gap: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: handleLeftClick,\n          style: {\n            background: 'white',\n            borderRadius: '10px',\n            minHeight: '150px',\n            display: 'flex',\n            flexDirection: 'column',\n            border: '1px solid black',\n            width: '300px',\n            padding: '10px'\n          },\n          children: [image1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image1,\n            alt: \"Image 1\",\n            height: 300\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: uploadImg,\n            alt: \"Upload\",\n            width: 50,\n            style: {\n              margin: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: leftImgRef,\n            type: \"file\",\n            style: {\n              display: 'none'\n            },\n            onChange: e => handleImageUpload(e, setImage1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), angle1 !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Angle 1: \", angle1.toFixed(2), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: handleRightClick,\n          style: {\n            background: 'white',\n            borderRadius: '10px',\n            minHeight: '150px',\n            display: 'flex',\n            flexDirection: 'column',\n            border: '1px solid black',\n            width: '300px',\n            padding: '10px'\n          },\n          children: [image2 ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image2,\n            alt: \"Image 2\",\n            height: 300\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: uploadImg,\n            alt: \"Upload\",\n            width: 50,\n            style: {\n              margin: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: rightImgRef,\n            type: \"file\",\n            style: {\n              display: 'none'\n            },\n            onChange: e => handleImageUpload(e, setImage2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), angle2 !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Angle 2: \", angle2.toFixed(2), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), tiltAngle !== null && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Tilt Angle: \", tiltAngle.toFixed(2), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TiltAngleCalculatorFromImg, \"T8ZZaZkGHRJO5yfPXh/RmtKV4yM=\");\n_c = TiltAngleCalculatorFromImg;\nexport default TiltAngleCalculatorFromImg;\nvar _c;\n$RefreshReg$(_c, \"TiltAngleCalculatorFromImg\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Image","uploadImg","background","jsxDEV","_jsxDEV","Fragment","_Fragment","TiltAngleCalculatorFromImg","_s","image1","setImage1","image2","setImage2","angle1","setAngle1","angle2","setAngle2","tiltAngle","setTiltAngle","leftImgRef","rightImgRef","processImage","calculateTilt","handleLeftClick","current","click","handleRightClick","handleImageUpload","e","setImage","file","target","files","URL","createObjectURL","imageSrc","setAngle","img","load","gray","grey","edges","sobelFilter","edgePoints","y","height","x","width","getPixelXY","push","length","console","error","meanX","reduce","sum","p","meanY","covXX","covYY","covXY","dx","dy","angleRad","Math","atan2","angleDeg","PI","log","toFixed","xRad","yRad","tanSquaredSum","pow","tan","zRad","atan","sqrt","zDeg","children","src","alt","style","position","inset","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","zIndex","display","marginTop","justifyContent","alignItems","gap","onClick","borderRadius","minHeight","flexDirection","border","padding","margin","ref","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/src/calculators/TiltAngleCalculatorFromImg.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Image } from 'image-js';\r\n\r\nimport uploadImg from '../assets/imgs/upload.png';\r\nimport background from '../assets/imgs/background.png';\r\n\r\nconst TiltAngleCalculatorFromImg = () => {\r\n  const [image1, setImage1] = useState(null);\r\n  const [image2, setImage2] = useState(null);\r\n  const [angle1, setAngle1] = useState(null);\r\n  const [angle2, setAngle2] = useState(null);\r\n  const [tiltAngle, setTiltAngle] = useState(null);\r\n  const leftImgRef = useRef(null);\r\n  const rightImgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (image1) {\r\n      processImage(image1, setAngle1);\r\n    }\r\n    if (image2) {\r\n      processImage(image2, setAngle2);\r\n    }\r\n  }, [image1, image2]);\r\n\r\n  useEffect(() => {\r\n    calculateTilt();\r\n  }, [angle1, angle2]);\r\n\r\n  const handleLeftClick = () => {\r\n    if (leftImgRef.current) {\r\n      leftImgRef.current.click();\r\n    }\r\n  };\r\n  const handleRightClick = () => {\r\n    if (rightImgRef.current) {\r\n      rightImgRef.current.click();\r\n    }\r\n  };\r\n  // Handle Image Upload\r\n  const handleImageUpload = (e, setImage) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(URL.createObjectURL(file));\r\n    }\r\n  };\r\n\r\n  // Process Image with image-js\r\n  const processImage = async (imageSrc, setAngle) => {\r\n    const img = await Image.load(imageSrc);\r\n    const gray = img.grey();\r\n    const edges = gray.sobelFilter(); // Edge detection\r\n\r\n    // Get all edge pixels\r\n    let edgePoints = [];\r\n    for (let y = 0; y < edges.height; y++) {\r\n      for (let x = 0; x < edges.width; x++) {\r\n        if (edges.getPixelXY(x, y)[0] > 0) { // Check if pixel is part of an edge\r\n          edgePoints.push([x, y]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (edgePoints.length < 2) {\r\n      console.error(\"Not enough edge points detected.\");\r\n      return;\r\n    }\r\n\r\n    // Perform PCA (Principal Component Analysis)\r\n    const meanX = edgePoints.reduce((sum, p) => sum + p[0], 0) / edgePoints.length;\r\n    const meanY = edgePoints.reduce((sum, p) => sum + p[1], 0) / edgePoints.length;\r\n\r\n    let covXX = 0, covYY = 0, covXY = 0;\r\n    for (const [x, y] of edgePoints) {\r\n      const dx = x - meanX;\r\n      const dy = y - meanY;\r\n      covXX += dx * dx;\r\n      covYY += dy * dy;\r\n      covXY += dx * dy;\r\n    }\r\n\r\n    // Compute orientation\r\n    const angleRad = 0.5 * Math.atan2(2 * covXY, covXX - covYY);\r\n    let angleDeg = angleRad * (180 / Math.PI);\r\n\r\n    // Convert to \"vertical-based\" angle (90° should be 0°, right tilt = +, left tilt = -)\r\n    if (angleDeg > 0) {\r\n      angleDeg = 90 - angleDeg;\r\n    } else {\r\n      angleDeg = 90 + angleDeg;\r\n    }\r\n\r\n    console.log(`Detected angle: ${angleDeg.toFixed(2)}°`);\r\n    setAngle(angleDeg);\r\n  };\r\n\r\n  // Calculate Tilt Angle Between Two Images\r\n  const calculateTilt = () => {\r\n    if (angle1 !== null && angle2 !== null) {\r\n      const xRad = (angle1 * Math.PI) / 180;\r\n      const yRad = (angle2 * Math.PI) / 180;\r\n\r\n      // Compute tan^2(x) + tan^2(y)\r\n      const tanSquaredSum = Math.pow(Math.tan(xRad), 2) + Math.pow(Math.tan(yRad), 2);\r\n\r\n      // Compute z in radians\r\n      const zRad = Math.atan(Math.sqrt(tanSquaredSum));\r\n\r\n      // Convert back to degrees\r\n      const zDeg = (zRad * 180) / Math.PI;\r\n      setTiltAngle(zDeg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <img src={background} width=\"100%\" alt=\"BG\" style={{ position: 'absolute', inset: '0', height: '100%' }} />\r\n      <div style={{ textAlign: 'center', zIndex: '1', position: 'relative' }}>\r\n        <h2>Tilt Angle Calculator</h2>\r\n\r\n        <div style={{ display: 'flex', marginTop: '30px', justifyContent: 'center', alignItems: 'cneter', gap: '30px' }}>\r\n          {/* Upload Image 1 */}\r\n          <div onClick={handleLeftClick} style={{ background: 'white', borderRadius: '10px', minHeight: '150px', display: 'flex', flexDirection: 'column', border: '1px solid black', width: '300px', padding: '10px' }}>\r\n            {image1 ? (\r\n              <img src={image1} alt=\"Image 1\" height={300} />\r\n            ) : (\r\n              <img src={uploadImg} alt=\"Upload\" width={50} style={{ margin: 'auto' }} />\r\n            )}\r\n            <input ref={leftImgRef} type=\"file\" style={{ display: 'none' }} onChange={(e) => handleImageUpload(e, setImage1)} />\r\n            {angle1 !== null && <p>Angle 1: {angle1.toFixed(2)}°</p>}\r\n          </div>\r\n\r\n          {/* Upload Image 2 */}\r\n          <div onClick={handleRightClick} style={{ background: 'white', borderRadius: '10px', minHeight: '150px', display: 'flex', flexDirection: 'column', border: '1px solid black', width: '300px', padding: '10px' }}>\r\n            {image2 ? (\r\n              <img src={image2} alt=\"Image 2\" height={300} />\r\n            ) : (\r\n              <img src={uploadImg} alt=\"Upload\" width={50} style={{ margin: 'auto' }} />\r\n            )}\r\n            <input ref={rightImgRef} type=\"file\" style={{ display: 'none' }} onChange={(e) => handleImageUpload(e, setImage2)} />\r\n            {angle2 !== null && <p>Angle 2: {angle2.toFixed(2)}°</p>}\r\n          </div>\r\n        </div>\r\n        {/* Calculate Tilt Angle */}\r\n        {tiltAngle !== null && <h3>Tilt Angle: {tiltAngle.toFixed(2)}°</h3>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TiltAngleCalculatorFromImg;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}