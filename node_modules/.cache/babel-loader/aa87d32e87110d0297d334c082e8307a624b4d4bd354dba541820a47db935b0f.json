{"ast":null,"code":"import { isAnyArray } from 'is-any-array';\nexport { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (isAnyArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n  train() {\n    // Do nothing for this package\n  }\n  toString() {\n    return '';\n  }\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!isAnyArray(x) || !isAnyArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += (y[i] - y2[i]) * (y[i] - y2[i]) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n    const r = (n * xY - xSum * ySum) / Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n)\n    };\n  }\n}","map":{"version":3,"names":["isAnyArray","default","maybeToPrecision","checkArrayLength","BaseRegression","constructor","new","target","Error","predict","x","_predict","y","i","length","push","TypeError","train","toString","toLaTeX","score","n","y2","Array","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","r","Math","sqrt","r2"],"sources":["C:/Users/Admin/Documents/Workspace/opencv/opencv/node_modules/ml-regression-base/src/index.js"],"sourcesContent":["import { isAnyArray } from 'is-any-array';\n\nexport { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\n\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (isAnyArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!isAnyArray(x) || !isAnyArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n),\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}