{"ast":null,"code":"/**\n * Cast `number` to string. Optionally `digits` specifies significant figures.\n * @param number\n * @param figures\n * @returns - A string representation of `number`.\n */\nexport default function maybeToPrecision(number, figures) {\n  if (number < 0) {\n    number = 0 - number;\n    if (typeof figures === 'number') {\n      return `- ${number.toPrecision(figures)}`;\n    } else {\n      return `- ${number.toString()}`;\n    }\n  } else if (typeof figures === 'number') {\n    return number.toPrecision(figures);\n  } else {\n    return number.toString();\n  }\n}","map":{"version":3,"names":["maybeToPrecision","number","figures","toPrecision","toString"],"sources":["C:\\Users\\Admin\\Documents\\Workspace\\opencv\\opencv\\node_modules\\ml-regression-exponential\\node_modules\\ml-regression-base\\src\\maybeToPrecision.ts"],"sourcesContent":["/**\n * Cast `number` to string. Optionally `digits` specifies significant figures.\n * @param number\n * @param figures\n * @returns - A string representation of `number`.\n */\nexport default function maybeToPrecision(number: number, figures?: number) {\n  if (number < 0) {\n    number = 0 - number;\n    if (typeof figures === 'number') {\n      return `- ${number.toPrecision(figures)}`;\n    } else {\n      return `- ${number.toString()}`;\n    }\n  } else if (typeof figures === 'number') {\n    return number.toPrecision(figures);\n  } else {\n    return number.toString();\n  }\n}\n"],"mappings":"AAAA;;;;;;AAMA,eAAc,SAAUA,gBAAgBA,CAACC,MAAc,EAAEC,OAAgB;EACvE,IAAID,MAAM,GAAG,CAAC,EAAE;IACdA,MAAM,GAAG,CAAC,GAAGA,MAAM;IACnB,IAAI,OAAOC,OAAO,KAAK,QAAQ,EAAE;MAC/B,OAAO,KAAKD,MAAM,CAACE,WAAW,CAACD,OAAO,CAAC,EAAE;KAC1C,MAAM;MACL,OAAO,KAAKD,MAAM,CAACG,QAAQ,EAAE,EAAE;;GAElC,MAAM,IAAI,OAAOF,OAAO,KAAK,QAAQ,EAAE;IACtC,OAAOD,MAAM,CAACE,WAAW,CAACD,OAAO,CAAC;GACnC,MAAM;IACL,OAAOD,MAAM,CAACG,QAAQ,EAAE;;AAE5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}